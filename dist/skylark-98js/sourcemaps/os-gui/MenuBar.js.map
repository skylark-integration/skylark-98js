{"version":3,"sources":["os-gui/MenuBar.js"],"names":["define","$","exports","E","nodeName","attrs","el","document","createElement","key","className","setAttribute","uid_counter","uid","toString","Math","random","slice","display_hotkey","text","replace","MENU_DIVIDER","MAX_MENU_NESTING","internal_z_counter","get_new_menu_z_index","$Window","Z_INDEX","MenuBar","menus","this","menus_el","class","role","aria-label","get_direction","window","getComputedStyle","direction","style","touchAction","selecting_menus","top_level_menus","active_menu_popup","top_level_menu_index","menu_popup_by_el","WeakMap","submenu_popups_by_menu_item_el","parent_item_el_by_popup_el","any_open_menus","querySelectorAll","some","popup_el","display","close_menus","menu_button_el","dispatchEvent","CustomEvent","popup_els","debugKeepMenusOpen","forEach","classList","remove","removeAttribute","parent_item_el","get","contains","refocus_window","window_el","closest","top_level_highlight","new_index_or_menu_key","new_index","Object","keys","indexOf","add","addEventListener","menu_popup_el","event","relatedTarget","is_disabled","item","enabled","send_info_event","description","jQuery","Event","detail","extraParam","console","warn","trigger","handleKeyDown","e","defaultPrevented","active_menu_popup_el","target","top_level_menu","open_top_level_menu","highlighted_item_el","querySelector","keyCode","right","click","preventDefault","parentMenuPopup","element","focus","preventScroll","highlight","menuItems","itemElements","menu_was_open","cycle_dir","length","new_top_level_menu","target_button_el","down","item_els","to_item_el","activeElement","String","fromCharCode","toLowerCase","map","item_els_by_accelerator","item_el","accelerator","accelerator_key","textContent","push","matching_item_els","menu_item_el","find","index","make_menu_button","menus_key","menu_items","aria-expanded","aria-haspopup","appendChild","menu_popup","MenuPopup","id","tabIndex","outline","menu_popup_table_el","set","last_item_el","submenus","submenu","submenu_popup_el","index_or_element","label","item_index","row_el","td_el","colspan","hr_el","checkbox","ariaKeyShortcuts","shortcut","shortcutLabel","checkbox_area_el","label_el","shortcut_el","submenu_area_el","open_submenu","innerHTML","check","checked","visibility","pointerType","transform","submenu_popup","close_submenus_at_this_level","close_submenu","open_tid","close_tid","body","dataset","semanticParent","getAttribute","highlight_first","zIndex","parentElement","rect","getBoundingClientRect","submenu_popup_rect","position","left","width","scrollX","top","scrollY","innerWidth","_submenus","clearTimeout","setTimeout","just_activated","item_action","toggle","action","button","update_position_from_containing_bounds","popup_rect","bottom","uncorrected_rect","floor","ceil","menu_id","type","hotkey","search","index_of_hotkey","toUpperCase","menu_key","close_menus_on_click_outside","isTrusted","keyboard_scope_elements","set_keyboard_scope","elements","removeEventListener","keyboard_scope_keydown","ctrlKey","metaKey","altKey","shiftKey","menu","closeMenus","setKeyboardScope"],"mappings":"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","file":"../../os-gui/MenuBar.js","sourcesContent":["define([\n\t\"skylark-jquery\"\n],function($){\n\n\tvar exports = {};\n\n\tfunction E(nodeName, attrs) {\n\t\tconst el = document.createElement(nodeName);\n\t\tif (attrs) {\n\t\t\tfor (const key in attrs) {\n\t\t\t\tif (key === \"class\") {\n\t\t\t\t\tel.className = attrs[key];\n\t\t\t\t} else {\n\t\t\t\t\tel.setAttribute(key, attrs[key]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn el;\n\t}\n\n\tlet uid_counter = 0;\n\tfunction uid() {\n\t\t// make id from counter (guaranteeing page-local uniqueness)\n\t\t// and random base 36 number (making it look random, so there's no temptation to use it as a sequence)\n\t\t// Note: Math.random().toString(36).slice(2) can give empty string\n\t\treturn (uid_counter++).toString(36) + Math.random().toString(36).slice(2);\n\t}\n\n\t// @TODO: DRY hotkey helpers with jspaint (export them?)\n\n\t// & defines accelerators (hotkeys) in menus and buttons and things, which get underlined in the UI.\n\t// & can be escaped by doubling it, e.g. \"&Taskbar && Start Menu\"\n\tfunction index_of_hotkey(text) {\n\t\t// Returns the index of the ampersand that defines a hotkey, or -1 if not present.\n\n\t\t// return english_text.search(/(?<!&)&(?!&|\\s)/); // not enough browser support for negative lookbehind assertions\n\n\t\t// The space here handles beginning-of-string matching and counteracts the offset for the [^&] so it acts like a negative lookbehind\n\t\treturn ` ${text}`.search(/[^&]&[^&\\s]/);\n\t}\n\t// function has_hotkey(text) {\n\t// \treturn index_of_hotkey(text) !== -1;\n\t// }\n\tfunction remove_hotkey(text) {\n\t\treturn text.replace(/\\s?\\(&.\\)/, \"\").replace(/([^&]|^)&([^&\\s])/, \"$1$2\");\n\t}\n\tfunction display_hotkey(text) {\n\t\t// TODO: use a more general term like .hotkey or .accelerator?\n\t\treturn text.replace(/([^&]|^)&([^&\\s])/, \"$1<span class='menu-hotkey'>$2</span>\").replace(/&&/g, \"&\");\n\t}\n\tfunction get_hotkey(text) {\n\t\treturn text[index_of_hotkey(text) + 1].toUpperCase();\n\t}\n\n\t// TODO: support copy/pasting text in the text tool textarea from the menus\n\t// probably by recording document.activeElement on pointer down,\n\t// and restoring focus before executing menu item actions.\n\n\tconst MENU_DIVIDER = \"MENU_DIVIDER\";\n\n\tconst MAX_MENU_NESTING = 1000;\n\n\tlet internal_z_counter = 1;\n\tfunction get_new_menu_z_index() {\n\t\t// integrate with the OS window z-indexes, if applicable\n\t\t// but don't depend on $Window existing, the modules should be independent\n\t\tif (typeof $Window !== \"undefined\") {\n\t\t\treturn ($Window.Z_INDEX++) + MAX_MENU_NESTING; // MAX_MENU_NESTING is needed because the window gets brought to the top\n\t\t}\n\t\treturn (++internal_z_counter) + MAX_MENU_NESTING;\n\t}\n\n\tfunction MenuBar(menus) {\n\t\tif (!(this instanceof MenuBar)) {\n\t\t\treturn new MenuBar(menus);\n\t\t}\n\n\t\tconst menus_el = E(\"div\", {\n\t\t\tclass: \"menus\",\n\t\t\trole: \"menubar\",\n\t\t\t\"aria-label\": \"Application Menu\",\n\t\t});\n\t\tmenus_el.style.touchAction = \"none\";\n\n\t\t// returns writing/layout direction, \"ltr\" or \"rtl\"\n\t\tfunction get_direction() {\n\t\t\treturn window.get_direction ? window.get_direction() : getComputedStyle(menus_el).direction;\n\t\t}\n\n\t\tlet selecting_menus = false; // state where you can glide between menus without clicking\n\n\t\tconst top_level_menus = [];\n\t\tlet top_level_menu_index = -1; // index of the top level menu that's most recently open\n\t\tlet active_menu_popup; // most nested open MenuPopup\n\t\tconst menu_popup_by_el = new WeakMap(); // maps DOM elements to MenuPopup instances\n\n\t\t// There can be multiple menu bars instantiated from the same menu definitions,\n\t\t// so this can't be a map of menu item to submenu, it has to be of menu item ELEMENTS to submenu.\n\t\t// (or you know, it could work totally differently, this is just one way obviously)\n\t\t// This is for entering submenus.\n\t\tconst submenu_popups_by_menu_item_el = new WeakMap();\n\n\t\t// This is for exiting submenus.\n\t\tconst parent_item_el_by_popup_el = new WeakMap();\n\n\t\t// @TODO: specific to this menu bar (note that popups are not descendants of the menu bar)\n\t\tconst any_open_menus = () => [...document.querySelectorAll(\".menu-popup\")].some(popup_el => popup_el.style.display !== \"none\");\n\n\t\tconst close_menus = () => {\n\t\t\tfor (const { menu_button_el } of top_level_menus) {\n\t\t\t\tmenu_button_el.dispatchEvent(new CustomEvent(\"release\"), {});\n\t\t\t}\n\t\t\t// Close any rogue floating submenus\n\t\t\t// @TODO: eventually this code should be removed\n\t\t\t// it's here pretty much \"just in case\"\n\t\t\tconst popup_els = document.querySelectorAll(\".menu-popup\");\n\t\t\tfor (const popup_el of popup_els) {\n\t\t\t\tif (!window.debugKeepMenusOpen) {\n\t\t\t\t\tpopup_el.style.display = \"none\";\n\t\t\t\t\tpopup_el.querySelectorAll(\".menu-item\").forEach((el) => el.classList.remove(\"highlight\"));\n\t\t\t\t\tpopup_el.removeAttribute(\"aria-activedescendant\");\n\t\t\t\t\tconst parent_item_el = parent_item_el_by_popup_el.get(popup_el);\n\t\t\t\t\tif (parent_item_el) {\n\t\t\t\t\t\tif (!parent_item_el.classList.contains(\"menu-button\")) {\n\t\t\t\t\t\t\tparent_item_el.classList.remove(\"highlight\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparent_item_el.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tconst refocus_window = () => {\n\t\t\tconst window_el = menus_el.closest(\".window\");\n\t\t\tif (window_el) {\n\t\t\t\twindow_el.dispatchEvent(new CustomEvent(\"refocus-window\"));\n\t\t\t}\n\t\t};\n\n\t\tconst top_level_highlight = (new_index_or_menu_key) => {\n\t\t\tconst new_index = typeof new_index_or_menu_key === \"string\" ?\n\t\t\t\tObject.keys(menus).indexOf(new_index_or_menu_key) :\n\t\t\t\tnew_index_or_menu_key;\n\t\t\tif (top_level_menu_index !== -1) {\n\t\t\t\ttop_level_menus[top_level_menu_index].menu_button_el.classList.remove(\"highlight\");\n\t\t\t\t// could close the menu here, but it's handled externally right now\n\t\t\t}\n\t\t\tif (new_index !== -1) {\n\t\t\t\ttop_level_menus[new_index].menu_button_el.classList.add(\"highlight\");\n\t\t\t}\n\t\t\ttop_level_menu_index = new_index;\n\t\t};\n\t\tmenus_el.addEventListener(\"pointerleave\", () => {\n\t\t\t// unhighlight unless a menu is open\n\t\t\tif (\n\t\t\t\ttop_level_menu_index !== -1 &&\n\t\t\t\ttop_level_menus[top_level_menu_index].menu_popup_el.style.display === \"none\"\n\t\t\t) {\n\t\t\t\ttop_level_highlight(-1);\n\t\t\t}\n\t\t});\n\t\twindow.addEventListener(\"focusout\", (event) => {\n\t\t\t// if not still in menus, unhighlight (e.g. if you hit Escape to unfocus the menus)\n\t\t\tif (event.relatedTarget && event.relatedTarget.closest && event.relatedTarget.closest(\".menu-popup, .menus\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttop_level_highlight(-1);\n\t\t});\n\n\n\t\tconst is_disabled = item => {\n\t\t\tif (typeof item.enabled === \"function\") {\n\t\t\t\treturn !item.enabled();\n\t\t\t} else if (typeof item.enabled === \"boolean\") {\n\t\t\t\treturn !item.enabled;\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t};\n\n\t\tfunction send_info_event(item) {\n\t\t\t// @TODO: in a future version, give the whole menu item definition (or null)\n\t\t\tconst description = item && item.description || \"\";\n\t\t\tif (window.jQuery) {\n\t\t\t\t// old API (using jQuery's \"extraParameters\"), made forwards compatible with new API (event.detail)\n\t\t\t\tconst event = new window.jQuery.Event(\"info\", { detail: { description } });\n\t\t\t\tconst extraParam = {\n\t\t\t\t\ttoString() {\n\t\t\t\t\t\tconsole.warn(\"jQuery extra parameter for info event is deprecated, use event.detail instead\");\n\t\t\t\t\t\treturn description;\n\t\t\t\t\t},\n\t\t\t\t};\n\t\t\t\twindow.jQuery(menus_el).trigger(event, extraParam);\n\t\t\t} else {\n\t\t\t\tmenus_el.dispatchEvent(new CustomEvent(\"info\", { detail: { description } }));\n\t\t\t}\n\t\t}\n\n\n\t\t// attached to menu bar and floating popups (which are not descendants of the menu bar)\n\t\tfunction handleKeyDown(e) {\n\t\t\tif (e.defaultPrevented) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tconst active_menu_popup_el = e.target.closest(\".menu-popup\");\n\t\t\tconst active_menu_popup = active_menu_popup_el && menu_popup_by_el.get(active_menu_popup_el);\n\t\t\tconst top_level_menu = top_level_menus[top_level_menu_index];\n\t\t\tconst { menu_button_el, open_top_level_menu } = top_level_menu || {};\n\t\t\tconst menu_popup_el = active_menu_popup_el || top_level_menu && top_level_menu.menu_popup_el;\n\t\t\tconst parent_item_el = parent_item_el_by_popup_el.get(active_menu_popup_el);\n\t\t\tconst highlighted_item_el = menu_popup_el && menu_popup_el.querySelector(\".menu-item.highlight\");\n\n\t\t\t// console.log(\"keydown\", e.key, { target: e.target, active_menu_popup_el, top_level_menu, menu_popup_el, parent_item_el, highlighted_item_el });\n\n\t\t\tswitch (e.keyCode) {\n\t\t\t\tcase 37: // Left\n\t\t\t\tcase 39: // Right\n\t\t\t\t\tconst right = e.keyCode === 39;\n\t\t\t\t\tif (\n\t\t\t\t\t\thighlighted_item_el && highlighted_item_el.classList.contains(\"has-submenu\") &&\n\t\t\t\t\t\t(get_direction() === \"ltr\") === right\n\t\t\t\t\t) {\n\t\t\t\t\t\t// enter submenu\n\t\t\t\t\t\thighlighted_item_el.click();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\tparent_item_el &&\n\t\t\t\t\t\t!parent_item_el.classList.contains(\"menu-button\") && // left/right doesn't make sense to close the top level menu\n\t\t\t\t\t\t(get_direction() === \"ltr\") !== right\n\t\t\t\t\t) {\n\t\t\t\t\t\t// exit submenu\n\t\t\t\t\t\tactive_menu_popup.parentMenuPopup.element.focus({ preventScroll: true });\n\t\t\t\t\t\tactive_menu_popup_el.style.display = \"none\";\n\t\t\t\t\t\tactive_menu_popup.highlight(-1);\n\t\t\t\t\t\tparent_item_el.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t\tsend_info_event(active_menu_popup.parentMenuPopup.menuItems[active_menu_popup.parentMenuPopup.itemElements.indexOf(parent_item_el)]);\n\t\t\t\t\t\t// @TODO: simplify with something like active_menu_popup.close()\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// basically any case except if you hover to open a submenu and then press right/left\n\t\t\t\t\t\t// in which case the menu is already open/focused\n\t\t\t\t\t\thighlighted_item_el ||\n\t\t\t\t\t\t!active_menu_popup ||\n\t\t\t\t\t\t!active_menu_popup.parentMenuPopup\n\t\t\t\t\t) {\n\t\t\t\t\t\t// go to next/previous top level menu, wrapping around\n\t\t\t\t\t\t// and open a new menu only if a menu was already open\n\t\t\t\t\t\tconst menu_was_open = menu_popup_el && menu_popup_el.style.display !== \"none\";\n\t\t\t\t\t\tconst cycle_dir = ((get_direction() === \"ltr\") === right) ? 1 : -1;\n\t\t\t\t\t\tlet new_index;\n\t\t\t\t\t\tif (top_level_menu_index === -1) {\n\t\t\t\t\t\t\tnew_index = cycle_dir === 1 ? 0 : top_level_menus.length - 1;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tnew_index = (top_level_menu_index + cycle_dir + top_level_menus.length) % top_level_menus.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconst new_top_level_menu = top_level_menus[new_index];\n\t\t\t\t\t\tconst target_button_el = new_top_level_menu.menu_button_el;\n\t\t\t\t\t\tif (menu_was_open) {\n\t\t\t\t\t\t\tnew_top_level_menu.open_top_level_menu(\"keydown\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmenu_button_el && menu_button_el.dispatchEvent(new CustomEvent(\"release\"), {});\n\t\t\t\t\t\t\ttarget_button_el.focus({ preventScroll: true });\n\t\t\t\t\t\t\t// Note case where menu is closed, menu button is hovered, then menu bar is unhovered,\n\t\t\t\t\t\t\t// rehovered(outside any buttons), and unhovered, and THEN you try to go to the next menu.\n\t\t\t\t\t\t\ttop_level_highlight(new_index);\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} // else:\n\t\t\t\t\t// if there's no highlighted item, the user may be expecting to enter the menu even though it's already open,\n\t\t\t\t\t// so it makes sense to do nothing (as Windows 98 does) and not go to the next/previous menu\n\t\t\t\t\t// (although highlighting the first item might be nicer...)\n\t\t\t\t\tbreak;\n\t\t\t\tcase 40: // Down\n\t\t\t\tcase 38: // Up\n\t\t\t\t\tconst down = e.keyCode === 40;\n\t\t\t\t\t// if (menu_popup_el && menu_popup_el.style.display !== \"none\") && highlighted_item_el) {\n\t\t\t\t\tif (active_menu_popup) {\n\t\t\t\t\t\tconst cycle_dir = down ? 1 : -1;\n\t\t\t\t\t\tconst item_els = [...menu_popup_el.querySelectorAll(\".menu-item\")];\n\t\t\t\t\t\tconst from_index = item_els.indexOf(highlighted_item_el);\n\t\t\t\t\t\tconst to_index = (from_index + cycle_dir + item_els.length) % item_els.length;\n\t\t\t\t\t\tconst to_item_el = item_els[to_index];\n\t\t\t\t\t\t// active_menu_popup.highlight(to_index); // wouldn't work because it doesn't include separators\n\t\t\t\t\t\tactive_menu_popup.highlight(to_item_el);\n\t\t\t\t\t\tsend_info_event(active_menu_popup.menuItems[active_menu_popup.itemElements.indexOf(to_item_el)]);\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else {\n\t\t\t\t\t\topen_top_level_menu && open_top_level_menu(\"keydown\");\n\t\t\t\t\t}\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 27: // Escape\n\t\t\t\t\tif (any_open_menus()) {\n\t\t\t\t\t\t// (@TODO: doesn't parent_item_el always exist?)\n\t\t\t\t\t\tif (parent_item_el && parent_item_el !== menu_button_el) {\n\t\t\t\t\t\t\t// exit submenu (@TODO: DRY)\n\t\t\t\t\t\t\tactive_menu_popup.parentMenuPopup.element.focus({ preventScroll: true });\n\t\t\t\t\t\t\tactive_menu_popup_el.style.display = \"none\";\n\t\t\t\t\t\t\tactive_menu_popup.highlight(-1);\n\t\t\t\t\t\t\tparent_item_el.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t\t\tsend_info_event(active_menu_popup.parentMenuPopup.menuItems[active_menu_popup.parentMenuPopup.itemElements.indexOf(parent_item_el)]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// close_menus takes care of releasing the pressed state of the button as well\n\t\t\t\t\t\t\tclose_menus();\n\t\t\t\t\t\t\tmenu_button_el.focus({ preventScroll: true });\n\t\t\t\t\t\t}\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst window_el = menus_el.closest(\".window\");\n\t\t\t\t\t\tif (window_el) {\n\t\t\t\t\t\t\t// refocus last focused control in window\n\t\t\t\t\t\t\t// refocus-window should never focus the menu bar\n\t\t\t\t\t\t\t// it stores the last focused control in the window and specifically not in the menus\n\t\t\t\t\t\t\twindow_el.dispatchEvent(new CustomEvent(\"refocus-window\"));\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 18: // Alt\n\t\t\t\t\t// close all menus and refocus the last focused control in the window\n\t\t\t\t\tclose_menus();\n\t\t\t\t\trefocus_window();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 32: // Space\n\t\t\t\t\t// opens system menu in Windows 98\n\t\t\t\t\t// (at top level)\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13: // Enter\n\t\t\t\t\tif (menu_button_el === document.activeElement) {\n\t\t\t\t\t\topen_top_level_menu(\"keydown\");\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t} else {\n\t\t\t\t\t\thighlighted_item_el && highlighted_item_el.click();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t// handle accelerators and first-letter navigation\n\t\t\t\t\tconst key = String.fromCharCode(e.keyCode).toLowerCase();\n\t\t\t\t\tconst item_els = active_menu_popup ?\n\t\t\t\t\t\t[...menu_popup_el.querySelectorAll(\".menu-item\")] :\n\t\t\t\t\t\ttop_level_menus.map(top_level_menu => top_level_menu.menu_button_el);\n\t\t\t\t\tconst item_els_by_accelerator = {};\n\t\t\t\t\tfor (const item_el of item_els) {\n\t\t\t\t\t\tconst accelerator = item_el.querySelector(\".menu-hotkey\");\n\t\t\t\t\t\tconst accelerator_key = (accelerator ?\n\t\t\t\t\t\t\taccelerator.textContent :\n\t\t\t\t\t\t\t(item_el.querySelector(\".menu-item-label\") /*??*/ ||  item_el).textContent[0]\n\t\t\t\t\t\t).toLowerCase();\n\t\t\t\t\t\titem_els_by_accelerator[accelerator_key] = item_els_by_accelerator[accelerator_key] || [];\n\t\t\t\t\t\titem_els_by_accelerator[accelerator_key].push(item_el);\n\t\t\t\t\t}\n\t\t\t\t\tconst matching_item_els = item_els_by_accelerator[key] || [];\n\t\t\t\t\t// console.log({ key, item_els, item_els_by_accelerator, matching_item_els });\n\t\t\t\t\tif (matching_item_els.length) {\n\t\t\t\t\t\tif (matching_item_els.length === 1) {\n\t\t\t\t\t\t\t// it's unambiguous, go ahead and activate it\n\t\t\t\t\t\t\tconst menu_item_el = matching_item_els[0];\n\t\t\t\t\t\t\t// click() doesn't work for menu buttons at the moment,\n\t\t\t\t\t\t\t// and also we want to highlight the first item in the menu\n\t\t\t\t\t\t\t// in that case, which doesn't happen with the mouse\n\t\t\t\t\t\t\tif (menu_item_el.classList.contains(\"menu-button\")) {\n\t\t\t\t\t\t\t\tconst top_level_menu = top_level_menus.find(top_level_menu => top_level_menu.menu_button_el === menu_item_el);\n\t\t\t\t\t\t\t\ttop_level_menu.open_top_level_menu(\"keydown\");\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tmenu_item_el.click();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// cycle the menu items that match the key\n\t\t\t\t\t\t\tlet index = matching_item_els.indexOf(highlighted_item_el);\n\t\t\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\t\t\tindex = 0;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tindex = (index + 1) % matching_item_els.length;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tconst menu_item_el = matching_item_els[index];\n\t\t\t\t\t\t\t// active_menu_popup.highlight(index); // would very much not work\n\t\t\t\t\t\t\tactive_menu_popup.highlight(menu_item_el);\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tmenus_el.addEventListener(\"keydown\", handleKeyDown);\n\n\t\t// TODO: API for context menus (i.e. floating menu popups)\n\t\tfunction MenuPopup(menu_items, { parentMenuPopup } = {}) {\n\t\t\tthis.parentMenuPopup = parentMenuPopup;\n\t\t\tthis.menuItems = menu_items;\n\t\t\tthis.itemElements = []; // one-to-one with menuItems (note: not all itemElements have class .menu-item) (@TODO: unify terminology)\n\n\t\t\tconst menu_popup_el = E(\"div\", {\n\t\t\t\tclass: \"menu-popup\",\n\t\t\t\tid: `menu-popup-${uid()}`,\n\t\t\t\ttabIndex: \"-1\",\n\t\t\t\trole: \"menu\",\n\t\t\t});\n\t\t\tmenu_popup_el.style.touchAction = \"pan-y\"; // will allow for scrolling overflowing menus in the future, but prevent event delay and double tap to zoom\n\t\t\tmenu_popup_el.style.outline = \"none\";\n\t\t\tconst menu_popup_table_el = E(\"table\", { class: \"menu-popup-table\" });\n\t\t\tmenu_popup_el.appendChild(menu_popup_table_el);\n\n\t\t\tthis.element = menu_popup_el;\n\t\t\tmenu_popup_by_el.set(menu_popup_el, this);\n\n\t\t\tlet submenus = [];\n\n\t\t\tmenu_popup_el.addEventListener(\"keydown\", handleKeyDown);\n\n\t\t\tmenu_popup_el.addEventListener(\"pointerleave\", () => {\n\t\t\t\t// if there's a submenu popup, highlight the item for that, otherwise nothing\n\n\t\t\t\t// could use aria-expanded for selecting this, alternatively\n\t\t\t\tfor (const submenu of submenus) {\n\t\t\t\t\tif (submenu.submenu_popup_el.style.display !== \"none\") {\n\t\t\t\t\t\tthis.highlight(submenu.item_el);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.highlight(-1);\n\t\t\t});\n\n\t\t\tmenu_popup_el.addEventListener(\"focusin\", (e) => {\n\t\t\t\t// prevent focus going to menu items; as designed, it works with aria-activedescendant and focus on the menu popup itself\n\t\t\t\t// (on desktop when clicking (and dragging out) then pressing a key, or on mobile when tapping, a focus ring was visible, and it wouldn't go away with keyboard navigation either)\n\t\t\t\tmenu_popup_el.focus({ preventScroll: true });\n\t\t\t});\n\n\t\t\tlet last_item_el;\n\t\t\tthis.highlight = (index_or_element) => { // index includes separators\n\t\t\t\tlet item_el = index_or_element;\n\t\t\t\tif (typeof index_or_element === \"number\") {\n\t\t\t\t\titem_el = this.itemElements[index_or_element];\n\t\t\t\t}\n\t\t\t\tif (last_item_el && last_item_el !== item_el) {\n\t\t\t\t\tlast_item_el.classList.remove(\"highlight\");\n\t\t\t\t}\n\t\t\t\tif (item_el) {\n\t\t\t\t\titem_el.classList.add(\"highlight\");\n\t\t\t\t\tmenu_popup_el.setAttribute(\"aria-activedescendant\", item_el.id);\n\t\t\t\t\tlast_item_el = item_el;\n\t\t\t\t} else {\n\t\t\t\t\tmenu_popup_el.removeAttribute(\"aria-activedescendant\");\n\t\t\t\t\tlast_item_el = null;\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tif (menu_items.length === 0) {\n\t\t\t\tmenu_items = [{\n\t\t\t\t\tlabel: \"(Empty)\",\n\t\t\t\t\tenabled: false,\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tmenu_items.forEach((item, item_index) => {\n\t\t\t\tconst row_el = E(\"tr\", { class: \"menu-row\" });\n\t\t\t\tthis.itemElements.push(row_el);\n\t\t\t\tmenu_popup_table_el.appendChild(row_el);\n\t\t\t\tif (item === MENU_DIVIDER) {\n\t\t\t\t\tconst td_el = E(\"td\", { colspan: 4 });\n\t\t\t\t\tconst hr_el = E(\"hr\", { class: \"menu-hr\" });\n\t\t\t\t\t// hr_el.setAttribute(\"role\", \"separator\"); // this is the implicit ARIA role for <hr>\n\t\t\t\t\t// and setting it on the <tr> might cause problems due to multiple elements with the role\n\t\t\t\t\t// hopefully it's fine that the semantic <hr> is nested?\n\t\t\t\t\ttd_el.appendChild(hr_el);\n\t\t\t\t\trow_el.appendChild(td_el);\n\t\t\t\t\t// Favorites menu behavior:\n\t\t\t\t\t// hr_el.addEventListener(\"click\", () => {\n\t\t\t\t\t// \tthis.highlight(-1);\n\t\t\t\t\t// });\n\t\t\t\t\t// Normal menu behavior:\n\t\t\t\t\thr_el.addEventListener(\"pointerenter\", () => {\n\t\t\t\t\t\tthis.highlight(-1);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconst item_el = row_el;\n\t\t\t\t\titem_el.classList.add(\"menu-item\");\n\t\t\t\t\titem_el.id = `menu-item-${uid()}`;\n\t\t\t\t\titem_el.tabIndex = -1; // may be needed for aria-activedescendant in some browsers?\n\t\t\t\t\titem_el.setAttribute(\"role\", item.checkbox ? \"menuitemcheckbox\" : \"menuitem\");\n\t\t\t\t\t// prevent announcing the SHORTCUT (distinct from the hotkey, which would already not be announced unless it's e.g. a translated string like \"새로 만들기 (&N)\")\n\t\t\t\t\t// remove_hotkey so it doesn't announce an ampersand\n\t\t\t\t\titem_el.setAttribute(\"aria-label\", remove_hotkey(item.label || item.item));\n\t\t\t\t\t// include the shortcut semantically; if you want to display the shortcut differently than aria-keyshortcuts syntax,\n\t\t\t\t\t// provide both ariaKeyShortcuts and shortcutLabel (old API: shortcut)\n\t\t\t\t\titem_el.setAttribute(\"aria-keyshortcuts\", item.ariaKeyShortcuts || item.shortcut || item.shortcutLabel);\n\n\t\t\t\t\tif (item.description) {\n\t\t\t\t\t\titem_el.setAttribute(\"aria-description\", item.description);\n\t\t\t\t\t}\n\t\t\t\t\tconst checkbox_area_el = E(\"td\", { class: \"menu-item-checkbox-area\" });\n\t\t\t\t\tconst label_el = E(\"td\", { class: \"menu-item-label\" });\n\t\t\t\t\tconst shortcut_el = E(\"td\", { class: \"menu-item-shortcut\" });\n\t\t\t\t\tconst submenu_area_el = E(\"td\", { class: \"menu-item-submenu-area\" });\n\n\t\t\t\t\titem_el.appendChild(checkbox_area_el);\n\t\t\t\t\titem_el.appendChild(label_el);\n\t\t\t\t\titem_el.appendChild(shortcut_el);\n\t\t\t\t\titem_el.appendChild(submenu_area_el);\n\n\t\t\t\t\tlabel_el.innerHTML = display_hotkey(item.label || item.item);\n\t\t\t\t\tshortcut_el.textContent = item.shortcut;\n\n\t\t\t\t\tmenu_popup_el.addEventListener(\"update\", () => {\n\t\t\t\t\t\t// item_el.disabled = is_disabled(item); // doesn't work, probably because it's a <tr>\n\t\t\t\t\t\tif (is_disabled(item)) {\n\t\t\t\t\t\t\titem_el.setAttribute(\"disabled\", \"\");\n\t\t\t\t\t\t\titem_el.setAttribute(\"aria-disabled\", \"true\");\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem_el.removeAttribute(\"disabled\");\n\t\t\t\t\t\t\titem_el.removeAttribute(\"aria-disabled\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (item.checkbox && item.checkbox.check) {\n\t\t\t\t\t\t\tconst checked = item.checkbox.check();\n\t\t\t\t\t\t\t// @TODO: use CSS for checkmark icon so it can be styled per theme\n\t\t\t\t\t\t\t// checkbox_area_el.classList.toggle(\"checked\", checked);\n\t\t\t\t\t\t\t// use visibility rather than display so it doesn't affect item height\n\t\t\t\t\t\t\tcheckbox_area_el.querySelector(\"svg\").style.visibility = checked ? \"visible\" : \"hidden\";\n\t\t\t\t\t\t\titem_el.setAttribute(\"aria-checked\", checked ? \"true\" : \"false\");\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\t// You may ask, why not call `send_info_event` in `highlight`?\n\t\t\t\t\t// Consider the case where you hover to open a menu, and it sets highlight to none,\n\t\t\t\t\t// it shouldn't reset the status bar. It needs to be more based on the pointer and keyboard interactions directly.\n\t\t\t\t\t// *Maybe* it could be a parameter (to `highlight`) if that's really helpful, but it's probably not.\n\t\t\t\t\t// *Maybe* it could look at more of the overall state within `highlight`,\n\t\t\t\t\t// but could it distinguish hovering an outer vs an inner item if two are highlighted?\n\t\t\t\t\titem_el.addEventListener(\"pointerenter\", () => {\n\t\t\t\t\t\tmenu_popup_el.dispatchEvent(new CustomEvent(\"update\"), {}); // @TODO: why?\n\t\t\t\t\t\tthis.highlight(item_index);\n\t\t\t\t\t\tsend_info_event(item);\n\t\t\t\t\t});\n\t\t\t\t\titem_el.addEventListener(\"pointerleave\", (event) => {\n\t\t\t\t\t\tif (\n\t\t\t\t\t\t\tmenu_popup_el.style.display !== \"none\" && // not \"left\" due to closing\n\t\t\t\t\t\t\tevent.pointerType !== \"touch\" // not \"left\" as in finger lifting off\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tsend_info_event();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\n\t\t\t\t\tif (item.checkbox) {\n\t\t\t\t\t\tcheckbox_area_el.innerHTML = `\n\t\t\t\t\t\t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tstyle=\"fill:currentColor;display:inline-block;vertical-align:middle\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path d=\"M5 7v3l2 2 5-5V4L7 9Z\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t`;\n\t\t\t\t\t}\n\t\t\t\t\t// @TODO: radio menu item support\n\t\t\t\t\t// if (item.radio) {\n\t\t\t\t\t// \tcheckbox_area_el.innerHTML = `\n\t\t\t\t\t// \t\t<svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t// \t\t\tstyle=\"fill:currentColor;display:inline-block;vertical-align:middle\"\n\t\t\t\t\t// \t\t>\n\t\t\t\t\t// \t\t\t<circle cx=\"8\" cy=\"8\" r=\"3\"/>\n\t\t\t\t\t// \t\t</svg>\n\t\t\t\t\t// \t`;\n\t\t\t\t\t// }\n\n\t\t\t\t\tlet open_submenu, submenu_popup_el;\n\t\t\t\t\tif (item.submenu) {\n\t\t\t\t\t\titem_el.classList.add(\"has-submenu\");\n\t\t\t\t\t\tsubmenu_area_el.innerHTML = `\n\t\t\t\t\t\t\t<svg width=\"16\" height=\"16\" xmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\tstyle=\"fill:currentColor;display:inline-block;vertical-align:middle\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<path d=\"m6 4 4 4-4 4z\"/>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t`;\n\t\t\t\t\t\tmenu_popup_el.addEventListener(\"update\", () => {\n\t\t\t\t\t\t\tsubmenu_area_el.querySelector(\"svg\").style.transform = get_direction() === \"rtl\" ? \"scaleX(-1)\" : \"\";\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\tconst submenu_popup = new MenuPopup(item.submenu, { parentMenuPopup: this });\n\t\t\t\t\t\tsubmenu_popup_el = submenu_popup.element;\n\t\t\t\t\t\tdocument.body && document.body.appendChild(submenu_popup_el);\n\t\t\t\t\t\tsubmenu_popup_el.style.display = \"none\";\n\n\t\t\t\t\t\titem_el.setAttribute(\"aria-haspopup\", \"true\");\n\t\t\t\t\t\titem_el.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t\titem_el.setAttribute(\"aria-controls\", submenu_popup_el.id);\n\n\t\t\t\t\t\tsubmenu_popups_by_menu_item_el.set(item_el, submenu_popup);\n\t\t\t\t\t\tparent_item_el_by_popup_el.set(submenu_popup_el, item_el);\n\t\t\t\t\t\tsubmenu_popup_el.dataset.semanticParent = menu_popup_el.id; // for $Window to understand the popup belongs to its window\n\t\t\t\t\t\tmenu_popup_el.setAttribute(\"aria-owns\", `${menu_popup_el.getAttribute(\"aria-owns\") || \"\"} ${submenu_popup_el.id}`);\n\t\t\t\t\t\tsubmenu_popup_el.setAttribute(\"aria-labelledby\", item_el.id);\n\n\n\t\t\t\t\t\topen_submenu = (highlight_first = true) => {\n\t\t\t\t\t\t\tif (submenu_popup_el.style.display !== \"none\") {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclose_submenus_at_this_level();\n\n\t\t\t\t\t\t\titem_el.setAttribute(\"aria-expanded\", \"true\");\n\n\t\t\t\t\t\t\tsubmenu_popup_el.style.display = \"\";\n\t\t\t\t\t\t\tsubmenu_popup_el.style.zIndex = get_new_menu_z_index();\n\t\t\t\t\t\t\tsubmenu_popup_el.setAttribute(\"dir\", get_direction());\n\t\t\t\t\t\t\tif (!submenu_popup_el.parentElement) {\n\t\t\t\t\t\t\t\tdocument.body.appendChild(submenu_popup_el);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// console.log(\"open_submenu — submenu_popup_el.style.zIndex\", submenu_popup_el.style.zIndex, \"$Window.Z_INDEX\", $Window.Z_INDEX, \"menus_el.closest('.window').style.zIndex\", menus_el.closest(\".window\").style.zIndex);\n\t\t\t\t\t\t\t// setTimeout(() => { console.log(\"after timeout, menus_el.closest('.window').style.zIndex\", menus_el.closest(\".window\").style.zIndex); }, 0);\n\t\t\t\t\t\t\tsubmenu_popup_el.dispatchEvent(new CustomEvent(\"update\"), {});\n\t\t\t\t\t\t\tif (highlight_first) {\n\t\t\t\t\t\t\t\tsubmenu_popup.highlight(0);\n\t\t\t\t\t\t\t\tsend_info_event(submenu_popup.menuItems[0]);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tsubmenu_popup.highlight(-1);\n\t\t\t\t\t\t\t\t// send_info_event(); // no, keep the status bar text!\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst rect = item_el.getBoundingClientRect();\n\t\t\t\t\t\t\tlet submenu_popup_rect = submenu_popup_el.getBoundingClientRect();\n\t\t\t\t\t\t\tsubmenu_popup_el.style.position = \"absolute\";\n\t\t\t\t\t\t\tsubmenu_popup_el.style.left = `${(get_direction() === \"rtl\" ? rect.left - submenu_popup_rect.width : rect.right) + window.scrollX}px`;\n\t\t\t\t\t\t\tsubmenu_popup_el.style.top = `${rect.top + window.scrollY}px`;\n\n\t\t\t\t\t\t\tsubmenu_popup_rect = submenu_popup_el.getBoundingClientRect();\n\t\t\t\t\t\t\t// This is surely not the cleanest way of doing this,\n\t\t\t\t\t\t\t// and the logic is not very robust in the first place,\n\t\t\t\t\t\t\t// but I want to get RTL support done and so I'm mirroring this in the simplest way possible.\n\t\t\t\t\t\t\tif (get_direction() === \"rtl\") {\n\t\t\t\t\t\t\t\tif (submenu_popup_rect.left < 0) {\n\t\t\t\t\t\t\t\t\tsubmenu_popup_el.style.left = `${rect.right}px`;\n\t\t\t\t\t\t\t\t\tsubmenu_popup_rect = submenu_popup_el.getBoundingClientRect();\n\t\t\t\t\t\t\t\t\tif (submenu_popup_rect.right > innerWidth) {\n\t\t\t\t\t\t\t\t\t\tsubmenu_popup_el.style.left = `${innerWidth - submenu_popup_rect.width}px`;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (submenu_popup_rect.right > innerWidth) {\n\t\t\t\t\t\t\t\t\tsubmenu_popup_el.style.left = `${rect.left - submenu_popup_rect.width}px`;\n\t\t\t\t\t\t\t\t\tsubmenu_popup_rect = submenu_popup_el.getBoundingClientRect();\n\t\t\t\t\t\t\t\t\tif (submenu_popup_rect.left < 0) {\n\t\t\t\t\t\t\t\t\t\tsubmenu_popup_el.style.left = \"0\";\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tsubmenu_popup_el.focus({ preventScroll: true });\n\t\t\t\t\t\t\tactive_menu_popup = submenu_popup;\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tfunction close_submenu() {\n\t\t\t\t\t\t\t// idempotent\n\t\t\t\t\t\t\tsubmenu_popup_el.style.display = \"none\";\n\t\t\t\t\t\t\tsubmenu_popup.highlight(-1);\n\t\t\t\t\t\t\titem_el.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t\t\t\tif (submenu_popup_el._submenus) {\n\t\t\t\t\t\t\t\tfor (const submenu of submenu_popup_el._submenus) {\n\t\t\t\t\t\t\t\t\tsubmenu.close_submenu();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tsubmenus.push({\n\t\t\t\t\t\t\titem_el,\n\t\t\t\t\t\t\tsubmenu_popup_el,\n\t\t\t\t\t\t\topen_submenu,\n\t\t\t\t\t\t\tclose_submenu,\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmenu_popup_el._submenus = submenus;\n\n\t\t\t\t\t\tfunction close_submenus_at_this_level() {\n\t\t\t\t\t\t\tfor (const submenu of submenus) {\n\t\t\t\t\t\t\t\tsubmenu.close_submenu();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmenu_popup_el.focus({ preventScroll: true });\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// It should close when hovering a different higher level menu\n\t\t\t\t\t\t// after a delay, unless the mouse returns to the submenu.\n\t\t\t\t\t\t// If you return the mouse from a submenu into its parent\n\t\t\t\t\t\t// *directly onto the parent menu item*, it stays open, but if you cross other menu items\n\t\t\t\t\t\t// in the parent menu, (@TODO:) it'll close after the delay even if you land on the parent menu item.\n\t\t\t\t\t\t// @TODO: Highlight the submenu-containing item while the submenu is open,\n\t\t\t\t\t\t// unless hovering a different item at that level (one highlight per level max).\n\t\t\t\t\t\t// @TODO: once a submenu opens (completing its animation if it has one),\n\t\t\t\t\t\t// - up/down should navigate the submenu (although it should not show as focused right away)\n\t\t\t\t\t\t//   - the rule is probably: up/down navigate the bottom-most submenu always (as long as it's not animating)\n\t\t\t\t\t\t// - the submenu cancels its closing timeout (if you've moved outside all menus, say)\n\t\t\t\t\t\t// @TODO: make this more robust in general! Make some automated tests.\n\n\t\t\t\t\t\tlet open_tid, close_tid;\n\t\t\t\t\t\tsubmenu_popup_el.addEventListener(\"pointerenter\", () => {\n\t\t\t\t\t\t\tif (open_tid) { clearTimeout(open_tid); open_tid = null; }\n\t\t\t\t\t\t\tif (close_tid) { clearTimeout(close_tid); close_tid = null; }\n\t\t\t\t\t\t});\n\t\t\t\t\t\titem_el.addEventListener(\"pointerenter\", () => {\n\t\t\t\t\t\t\t// @TODO: don't cancel close timer? in Windows 98 it'll still close after a delay if you hover the submenu's parent item\n\t\t\t\t\t\t\tif (open_tid) { clearTimeout(open_tid); open_tid = null; }\n\t\t\t\t\t\t\tif (close_tid) { clearTimeout(close_tid); close_tid = null; }\n\t\t\t\t\t\t\topen_tid = setTimeout(() => {\n\t\t\t\t\t\t\t\topen_submenu(false);\n\t\t\t\t\t\t\t}, 501); // @HACK: slightly longer than close timer so it doesn't close immediately\n\t\t\t\t\t\t});\n\t\t\t\t\t\titem_el.addEventListener(\"pointerleave\", () => {\n\t\t\t\t\t\t\tif (open_tid) { clearTimeout(open_tid); open_tid = null; }\n\t\t\t\t\t\t});\n\t\t\t\t\t\tmenu_popup_el.addEventListener(\"pointerenter\", (event) => {\n\t\t\t\t\t\t\t// console.log(event.target.closest(\".menu-item\"));\n\t\t\t\t\t\t\tif (event.target.closest(\".menu-item\") === item_el) {\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!close_tid) {\n\t\t\t\t\t\t\t\t// This is a little confusing, with timers per-item...\n\t\t\t\t\t\t\t\t// @TODO: try doing this with just one or two timers.\n\t\t\t\t\t\t\t\t// if (submenus.some(submenu => submenu.submenu_popup_el.style.display !== \"none\")) {\n\t\t\t\t\t\t\t\tif (submenu_popup_el.style.display !== \"none\") {\n\t\t\t\t\t\t\t\t\tclose_tid = setTimeout(() => {\n\t\t\t\t\t\t\t\t\t\tif (!window.debugKeepMenusOpen) {\n\t\t\t\t\t\t\t\t\t\t\t// close_submenu();\n\t\t\t\t\t\t\t\t\t\t\tclose_submenus_at_this_level();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}, 500);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// keep submenu open while mouse is outside any parent menus\n\t\t\t\t\t\tmenu_popup_el.addEventListener(\"pointerleave\", () => {\n\t\t\t\t\t\t\tif (close_tid) { clearTimeout(close_tid); close_tid = null; }\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\titem_el.addEventListener(\"pointerdown\", () => { open_submenu(false); });\n\t\t\t\t\t}\n\n\t\t\t\t\tlet just_activated = false; // to prevent double-activation from pointerup + click\n\t\t\t\t\tconst item_action = () => {\n\t\t\t\t\t\tif (just_activated) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tjust_activated = true;\n\t\t\t\t\t\tsetTimeout(() => { just_activated = false; }, 10);\n\n\t\t\t\t\t\tif (item.checkbox) {\n\t\t\t\t\t\t\tif (item.checkbox.toggle) {\n\t\t\t\t\t\t\t\titem.checkbox.toggle();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tmenu_popup_el.dispatchEvent(new CustomEvent(\"update\"), {});\n\t\t\t\t\t\t} else if (item.action) {\n\t\t\t\t\t\t\tclose_menus();\n\t\t\t\t\t\t\trefocus_window(); // before action, so things like copy/paste have a better chance of working\n\t\t\t\t\t\t\titem.action();\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t// pointerup is for gliding to menu items to activate\n\t\t\t\t\titem_el.addEventListener(\"pointerup\", e => {\n\t\t\t\t\t\tif (e.pointerType === \"mouse\" && e.button !== 0) {\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (e.pointerType === \"touch\") {\n\t\t\t\t\t\t\t// Will use click instead; otherwise focus is lost on a delay: if it opens a dialog for example,\n\t\t\t\t\t\t\t// you have to hold down on the menu item for a bit otherwise it'll blur the dialog after opening.\n\t\t\t\t\t\t\t// I think this is caused by the pointer falling through to elements without touch-action defined.\n\t\t\t\t\t\t\t// RIGHT NOW, gliding to menu items isn't supported for touch anyways,\n\t\t\t\t\t\t\t// although I'd like to support it in the future.\n\t\t\t\t\t\t\t// Well, it might have accessibility problems, so maybe not. I think this is fine.\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t\titem_el.click();\n\t\t\t\t\t});\n\t\t\t\t\titem_el.addEventListener(\"click\", e => {\n\t\t\t\t\t\tif (item.submenu) {\n\t\t\t\t\t\t\topen_submenu(true);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\titem_action();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// let this_click_opened_the_menu = false;\n\t\tconst make_menu_button = (menus_key, menu_items) => {\n\t\t\tconst menu_button_el = E(\"div\", {\n\t\t\t\tclass: \"menu-button\",\n\t\t\t\t\"aria-expanded\": \"false\",\n\t\t\t\t\"aria-haspopup\": \"true\",\n\t\t\t\trole: \"menuitem\",\n\t\t\t});\n\n\t\t\tmenus_el.appendChild(menu_button_el);\n\n\t\t\tconst menu_popup = new MenuPopup(menu_items);\n\t\t\tconst menu_popup_el = menu_popup.element;\n\t\t\tdocument.body && document.body.appendChild(menu_popup_el);\n\t\t\tsubmenu_popups_by_menu_item_el.set(menu_button_el, menu_popup);\n\t\t\tparent_item_el_by_popup_el.set(menu_popup_el, menu_button_el);\n\t\t\tmenu_button_el.id = `menu-button-${menus_key}-${uid()}`;\n\t\t\tmenu_popup_el.dataset.semanticParent = menu_button_el.id; // for $Window to understand the popup belongs to its window\n\t\t\tmenu_button_el.setAttribute(\"aria-controls\", menu_popup_el.id);\n\t\t\tmenu_popup_el.setAttribute(\"aria-labelledby\", menu_button_el.id);\n\t\t\tmenus_el.setAttribute(\"aria-owns\", `${menus_el.getAttribute(\"aria-owns\") || \"\"} ${menu_popup_el.id}`);\n\n\t\t\tconst update_position_from_containing_bounds = () => {\n\t\t\t\tconst rect = menu_button_el.getBoundingClientRect();\n\t\t\t\tlet popup_rect = menu_popup_el.getBoundingClientRect();\n\t\t\t\tmenu_popup_el.style.position = \"absolute\";\n\t\t\t\tmenu_popup_el.style.left = `${(get_direction() === \"rtl\" ? rect.right - popup_rect.width : rect.left) + window.scrollX}px`;\n\t\t\t\tmenu_popup_el.style.top = `${rect.bottom + window.scrollY}px`;\n\n\t\t\t\tconst uncorrected_rect = menu_popup_el.getBoundingClientRect();\n\t\t\t\t// rounding down is needed for RTL layout for the rightmost menu, to prevent a scrollbar\n\t\t\t\tif (Math.floor(uncorrected_rect.right) > innerWidth) {\n\t\t\t\t\tmenu_popup_el.style.left = `${innerWidth - uncorrected_rect.width}px`;\n\t\t\t\t}\n\t\t\t\tif (Math.ceil(uncorrected_rect.left) < 0) {\n\t\t\t\t\tmenu_popup_el.style.left = \"0px\";\n\t\t\t\t}\n\t\t\t};\n\t\t\twindow.addEventListener(\"resize\", update_position_from_containing_bounds);\n\t\t\tmenu_popup_el.addEventListener(\"update\", update_position_from_containing_bounds);\n\t\t\t// update_position_from_containing_bounds(); // will be called when the menu is opened\n\n\t\t\tconst menu_id = menus_key.replace(\"&\", \"\").replace(/ /g, \"-\").toLowerCase();\n\t\t\tmenu_button_el.classList.add(`${menu_id}-menu-button`);\n\t\t\t// menu_popup_el.id = `${menu_id}-menu-popup-${uid()}`; // id is created by MenuPopup and changing it breaks the data-semantic-parent relationship\n\t\t\tmenu_popup_el.style.display = \"none\";\n\t\t\tmenu_button_el.innerHTML = display_hotkey(menus_key);\n\t\t\tmenu_button_el.tabIndex = -1;\n\n\t\t\tmenu_button_el.setAttribute(\"aria-haspopup\", \"true\");\n\t\t\tmenu_button_el.setAttribute(\"aria-controls\", menu_popup_el.id);\n\n\t\t\tmenu_button_el.addEventListener(\"focus\", () => {\n\t\t\t\ttop_level_highlight(menus_key);\n\t\t\t});\n\t\t\tmenu_button_el.addEventListener(\"pointerdown\", e => {\n\t\t\t\tif (menu_button_el.classList.contains(\"active\")) {\n\t\t\t\t\tmenu_button_el.dispatchEvent(new CustomEvent(\"release\", {}));\n\t\t\t\t\trefocus_window();\n\t\t\t\t\te.preventDefault(); // needed for refocus_window() to work\n\t\t\t\t} else {\n\t\t\t\t\topen_top_level_menu(e.type);\n\t\t\t\t}\n\t\t\t});\n\t\t\tmenu_button_el.addEventListener(\"pointerenter\", e => {\n\t\t\t\ttop_level_highlight(menus_key);\n\t\t\t\tif (e.pointerType === \"touch\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (selecting_menus) {\n\t\t\t\t\topen_top_level_menu(e.type);\n\t\t\t\t}\n\t\t\t});\n\t\t\tfunction open_top_level_menu(type = \"other\") {\n\t\t\t\tclose_menus();\n\n\t\t\t\tmenu_button_el.classList.add(\"active\");\n\t\t\t\tmenu_button_el.setAttribute(\"aria-expanded\", \"true\");\n\t\t\t\tmenu_popup_el.style.display = \"\";\n\t\t\t\tmenu_popup_el.style.zIndex = get_new_menu_z_index();\n\t\t\t\tmenu_popup_el.setAttribute(\"dir\", get_direction());\n\t\t\t\tif (!menu_popup_el.parentElement) {\n\t\t\t\t\tdocument.body.appendChild(menu_popup_el);\n\t\t\t\t}\n\t\t\t\t// console.log(\"pointerdown (possibly simulated) — menu_popup_el.style.zIndex\", menu_popup_el.style.zIndex, \"$Window.Z_INDEX\", $Window.Z_INDEX, \"menus_el.closest('.window').style.zIndex\", menus_el.closest(\".window\").style.zIndex);\n\t\t\t\t// setTimeout(() => { console.log(\"after timeout, menus_el.closest('.window').style.zIndex\", menus_el.closest(\".window\").style.zIndex); }, 0);\n\t\t\t\ttop_level_highlight(menus_key);\n\n\t\t\t\tmenu_popup_el.dispatchEvent(new CustomEvent(\"update\"), {});\n\n\t\t\t\tselecting_menus = true;\n\n\t\t\t\tmenu_popup_el.focus({ preventScroll: true });\n\t\t\t\tactive_menu_popup = menu_popup;\n\n\t\t\t\tif (type === \"keydown\") {\n\t\t\t\t\tmenu_popup.highlight(0);\n\t\t\t\t\tsend_info_event(menu_popup.menuItems[0]);\n\t\t\t\t} else {\n\t\t\t\t\tsend_info_event(); // @TODO: allow descriptions on top level menus\n\t\t\t\t}\n\t\t\t};\n\t\t\tmenu_button_el.addEventListener(\"release\", () => {\n\t\t\t\tselecting_menus = false;\n\n\t\t\t\tmenu_button_el.classList.remove(\"active\");\n\t\t\t\tif (!window.debugKeepMenusOpen) {\n\t\t\t\t\tmenu_popup_el.style.display = \"none\";\n\t\t\t\t\tmenu_popup.highlight(-1);\n\t\t\t\t\tmenu_button_el.setAttribute(\"aria-expanded\", \"false\");\n\t\t\t\t}\n\n\t\t\t\tmenus_el.dispatchEvent(new CustomEvent(\"default-info\", {}));\n\t\t\t});\n\t\t\ttop_level_menus.push({\n\t\t\t\tmenu_button_el,\n\t\t\t\tmenu_popup_el,\n\t\t\t\tmenus_key,\n\t\t\t\thotkey: get_hotkey(menus_key),\n\t\t\t\topen_top_level_menu,\n\t\t\t});\n\t\t};\n\t\tfor (const menu_key in menus) {\n\t\t\tmake_menu_button(menu_key, menus[menu_key]);\n\t\t}\n\n\t\twindow.addEventListener(\"keydown\", e => {\n\t\t\t// close any errant menus\n\t\t\t// taking care not to interfere with regular Escape key behavior\n\t\t\t// @TODO: listen for menus_el removed from DOM, and close menus there\n\t\t\tif (\n\t\t\t\t!document.activeElement ||\n\t\t\t\t!document.activeElement.closest || // window or document\n\t\t\t\t!document.activeElement.closest(\".menus, .menu-popup\")\n\t\t\t) {\n\t\t\t\tif (e.keyCode === 27) { // Escape\n\t\t\t\t\tif (any_open_menus()) {\n\t\t\t\t\t\tclose_menus();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t\t// window.addEventListener(\"blur\", close_menus);\n\t\twindow.addEventListener(\"blur\", (event) => {\n\t\t\t// hack for Pinball (in 98.js.org) where it triggers fake blur events\n\t\t\t// in order to pause the game\n\t\t\tif (!event.isTrusted) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tclose_menus();\n\t\t});\n\t\tfunction close_menus_on_click_outside(event) {\n\t\t\tif (event.target && event.target.closest && event.target.closest(\".menus, .menu-popup\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// window.console && console.log(event.type, \"occurred outside of menus (on \", event.target, \") so...\");\n\t\t\tclose_menus();\n\t\t}\n\t\twindow.addEventListener(\"pointerdown\", close_menus_on_click_outside);\n\t\twindow.addEventListener(\"pointerup\", close_menus_on_click_outside);\n\n\t\tlet keyboard_scope_elements = [];\n\t\tfunction set_keyboard_scope(...elements) {\n\t\t\tfor (const el of keyboard_scope_elements) {\n\t\t\t\tel.removeEventListener(\"keydown\", keyboard_scope_keydown);\n\t\t\t}\n\t\t\tkeyboard_scope_elements = elements;\n\t\t\tfor (const el of keyboard_scope_elements) {\n\t\t\t\tel.addEventListener(\"keydown\", keyboard_scope_keydown);\n\t\t\t}\n\t\t}\n\t\tfunction keyboard_scope_keydown(e) {\n\t\t\t// Close menus if the user presses almost any key combination\n\t\t\t// e.g. if you look in the menu to remember a shortcut,\n\t\t\t// and then use the shortcut.\n\t\t\tif (\n\t\t\t\t(e.ctrlKey || e.metaKey) && // Ctrl or Command held down\n\t\t\t\t// and anything then pressed other than Ctrl or Command\n\t\t\t\te.keyCode !== 17 &&\n\t\t\t\te.keyCode !== 91 &&\n\t\t\t\te.keyCode !== 93 &&\n\t\t\t\te.keyCode !== 224\n\t\t\t) {\n\t\t\t\tclose_menus();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.defaultPrevented) {\n\t\t\t\treturn; // closing menus above is meant to be done when activating unrelated shortcuts\n\t\t\t\t// but stuff after this is should not be handled at the same time as something else\n\t\t\t}\n\t\t\tif (e.altKey && !e.shiftKey && !e.ctrlKey && !e.metaKey) { // Alt held\n\t\t\t\tconst menu = top_level_menus.find((menu) =>\n\t\t\t\t\tmenu.hotkey.toLowerCase() === String.fromCharCode(e.keyCode).toLowerCase()\n\t\t\t\t);\n\t\t\t\tif (menu) {\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\tmenu.open_top_level_menu(\"keydown\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tset_keyboard_scope(window);\n\n\t\tthis.element = menus_el;\n\t\tthis.closeMenus = close_menus;\n\t\tthis.setKeyboardScope = set_keyboard_scope;\n\t}\n\n\texports.MenuBar = MenuBar;\n\texports.MENU_DIVIDER = MENU_DIVIDER;\n\n\treturn exports;\n});\n"]}