{"version":3,"sources":["FolderView.js"],"names":["define","$","win98js","FolderViewItem","FilesystemSetup","helpers","grid_size_x_for_large_icons","grid_size_y_for_large_icons","grid_size_x_for_small_icons","grid_size_y_for_small_icons","window","resetAllFolderCustomizations","i","localStorage","length","key","startsWith","removeItem","icon_size_by_view_mode","LARGE_ICONS","SMALL_ICONS","DETAILS","LIST","DESKTOP","FolderView","VIEW_MODES","THUMBNAILS","SORT_MODES","NAME","TYPE","SIZE","DATE","file_extension_icons","txt","md","json","js","css","html","gitattributes","gitignore","png","jpg","jpeg","gif","webp","bmp","tif","tiff","wav","mp3","ogg","wma","exe","htm","url","theme","themepack","system_folder_path_to_name","/","/my-pictures/","/my-documents/","/network-neighborhood/","/desktop/","/programs/","/recycle-bin/","system_folder_name_to_path","Object","fromEntries","entries","map","value","set_dragging_file_paths","toLowerCase","dragging_file_paths","frame","parent","folder_path","asDesktop","onStatus","openFolder","openFileOrFolder","onConfigure","self","this","$folder_view","element","items","add_item","folder_view_item","append","push","config","storage_key","config_json","getItem","JSON","parse","assign","e","console","error","view_mode","sort_mode","view_as_web_page","dataset","viewMode","configure","config_props","arrange_icons","setItem","stringify","cycle_view_mode","view_modes","next_view_mode_index","indexOf","waiting_on_stats","updateStatus","selectedItems","filter","item","classList","contains","deleteRecursiveSync","fs","itemPath","statSync","isDirectory","childItemName","readdirSync","rmdirSync","unlinkSync","isConnected","pending_promises","pendingStatPromise","Boolean","any_pending","Promise","allSettled","then","horizontal_first","large_icons","icon_size","grid_size_x","grid_size_y","x","y","dir_ness","is_system_folder","resolvedStats","get_ext","file_path","split","pop","sort","a","b","title","localeCompare","size","mtime","left","top","clientWidth","clientHeight","setIconSize","forEach","index","toggle","focus","is","find","select_all","addClass","select_inverse","each","toggleClass","delete_selected","selected_file_paths","toArray","icon_el","filePath","undefined","name_of_first","text","replace","showMessageBox","message","buttons","label","default","iconID","result","withFilesystem","BrowserFS","BFSRequire","num_deleted","single_delete_success","log","remove","alert","start_rename","readdir","contents","fname","add_fs_item","ResizeObserver","observe","$marquee","appendTo","hide","start","current","dragging","drag_update","min_x","Math","min","min_y","max_x","max","max_y","show","position","width","height","folder_view_icon","offset","icon_left","parseFloat","icon_top","icon_width","icon_height","handle_pointermove","folder_view_offset","getBoundingClientRect","pageX","scrollLeft","pageY","scrollTop","scrollbar_width","scrollbar_height","clamp_left","clamp_top","clamp_right","clamp_bottom","scroll_speed","handle_pointerup_blur","ownerDocument","off","on","item_el","currentTarget","_was_selected_at_pointerdown","select_item","view_was_focused","$icon","target","closest","get","icon","offsetWidth","offsetHeight","rect","over_scrollbar","clientX","right","clientY","bottom","search_timeout","search_string","selection_anchor_item_el","item_or_item_el","event","delay_scroll","item_el_to_select","Element","extend_selection","shiftKey","some","anchor_rect","item_el_to_select_rect","item_el_rect","rectangle","type","ctrlKey","metaKey","setTimeout","scrollIntoView","block","navigate_grid","move_x","move_y","$starting_icon","item_width","outerWidth","item_height","outerHeight","item_pos","candidates","a_pos","b_pos","abs","tagName","trigger","folder_view","preventDefault","x_dir","full_page_size","increment","y_dir","isDefaultPrevented","altKey","clearTimeout","querySelector","textContent","toLocaleLowerCase","findIndex","icon_id_from_stats_and_path","stats","file_extension","file_extension_from_path","icons_from_icon_id","icon_id","16","getIconPath","32","48","initial_file_name","initial_file_path","open","async","rename","new_name","resolve","reject","new_file_path","err","setIcons","shortcut","match","iconSize","stat","dragover_pageX","originalEvent","dragover_pageY","files","dataTransfer","file","Buffer","name","reader","FileReader","onerror","onload","buffer","from","writeFile","flag","code","readAsArrayBuffer","drop_file"],"mappings":"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","file":"../FolderView.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"./win98\",\n\t\"./FolderViewItem\",\n\t\"./filesystem-setup\",\n\t\"./helpers\"\n],function($,win98js,FolderViewItem,FilesystemSetup,helpers){\n\tconst grid_size_x_for_large_icons = 75;\n\tconst grid_size_y_for_large_icons = 75;\n\t// @TODO: this is supposed to be dynamic based on length of names\n\tconst grid_size_x_for_small_icons = 150;\n\tconst grid_size_y_for_small_icons = 17;\n\n\twindow.resetAllFolderCustomizations = () => {\n\t\tfor (let i = 0; i < localStorage.length; i++) {\n\t\t\tif (localStorage.key(i).startsWith(\"folder-config:\")) {\n\t\t\t\tlocalStorage.removeItem(localStorage.key(i));\n\t\t\t}\n\t\t}\n\t};\n\n\tconst icon_size_by_view_mode = {\n\t\tLARGE_ICONS: 32,\n\t\tSMALL_ICONS: 16,\n\t\tDETAILS: 16,\n\t\tLIST: 16,\n\t\tDESKTOP: 32,\n\t};\n\n\tFolderView.VIEW_MODES = {\n\t\tTHUMBNAILS: \"THUMBNAILS\", // hidden until you right click in a folder, go to Properties, and enable thumbnails\n\t\tLARGE_ICONS: \"LARGE_ICONS\", // left to right, then top to bottom\n\t\tSMALL_ICONS: \"SMALL_ICONS\", // left to right, then top to bottom\n\t\tDETAILS: \"DETAILS\", // table view\n\t\tLIST: \"LIST\", // top to bottom, then left to right\n\t\tDESKTOP: \"DESKTOP\", // like Large Icons, but arranged top to bottom before left to right; does not apply to the Desktop folder, only the Desktop itself\n\t};\n\n\tFolderView.SORT_MODES = {\n\t\tNAME: \"NAME\",\n\t\tTYPE: \"TYPE\",\n\t\tSIZE: \"SIZE\",\n\t\tDATE: \"DATE\",\n\t\t// there are many other attributes, some for specific types of files/objects\n\t};\n\n\t// TODO: what's the \"right\" way to do file type / program associations for icons?\n\n\t// TODO: get more icons; can extract from shell32.dll, moricons.dll, and other files from a VM\n\t// also get more file extensions; can find a mime types listing data dump\n\t// https://github.com/1j01/retrores\n\t// Note: extensions must be lowercase here. This is used to implement case-insensitive matching.\n\tvar file_extension_icons = {\n\t\ttxt: \"notepad-file\",\n\t\tmd: \"notepad-file\",\n\t\tjson: \"notepad-file\",\n\t\tjs: \"notepad-file\",\n\t\tcss: \"notepad-file\",\n\t\thtml: \"notepad-file\",\n\t\tgitattributes: \"notepad-file\",\n\t\tgitignore: \"notepad-file\",\n\t\tpng: \"image-gif\", // \"image-png\"? nope... (but should it be image-gif or image-wmf?)\n\t\tjpg: \"image-jpeg\",\n\t\tjpeg: \"image-jpeg\",\n\t\tgif: \"image-gif\",\n\t\twebp: \"image-other\",\n\t\tbmp: \"paint-file\",\n\t\ttif: \"kodak-imaging-file\",\n\t\ttiff: \"kodak-imaging-file\",\n\t\t// wmf: \"image-wmf\"? nope (https://en.wikipedia.org/wiki/Windows_Metafile)\n\t\t// emf: \"image-wmf\"? nope\n\t\t// wmz: \"image-wmf\"? nope\n\t\t// emz: \"image-wmf\"? nope\n\t\twav: \"sound\",\n\t\tmp3: \"sound\", // TODO: show blue video icon, as it's a container format that can contain video\n\t\togg: \"sound\", // TODO: probably ditto\n\t\twma: \"sound\",\n\t\t// \"doc\": \"doc\"?\n\t\t\"exe\": \"task\",\n\t\thtm: \"html\",\n\t\thtml: \"html\",\n\t\turl: \"html\",\n\t\ttheme: \"themes\",\n\t\tthemepack: \"themes\",\n\t};\n\n\t// @TODO: maintain less fake naming abstraction\n\t// base it more on the actual filesystem\n\t// @TODO: bring system folders, icons, and file associations into one place\n\tconst system_folder_path_to_name = {\n\t\t\"/\": \"(C:)\", //\"My Computer\",\n\t\t\"/my-pictures/\": \"My Pictures\",\n\t\t\"/my-documents/\": \"My Documents\",\n\t\t\"/network-neighborhood/\": \"Network Neighborhood\",\n\t\t\"/desktop/\": \"Desktop\",\n\t\t\"/programs/\": \"Program Files\",\n\t\t\"/recycle-bin/\": \"Recycle Bin\",\n\t};\n\tconst system_folder_name_to_path = Object.fromEntries(\n\t\tObject.entries(system_folder_path_to_name).map(([key, value]) => [value, key])\n\t);\n\tconst system_folder_lowercase_name_to_path = Object.fromEntries(\n\t\tObject.entries(system_folder_name_to_path).map(([key, value]) => [key.toLowerCase(), value])\n\t);\n\n\n\tconst set_dragging_file_paths = (dragging_file_paths) => {\n\t\twindow.dragging_file_paths = dragging_file_paths;\n\t\tlet frame = window;\n\t\twhile (frame !== frame.parent) {\n\t\t\tframe = frame.parent;\n\t\t\tframe.dragging_file_paths = dragging_file_paths;\n\t\t}\n\t};\n\n\tfunction FolderView(folder_path, { asDesktop = false, onStatus, openFolder, openFileOrFolder, onConfigure } = {}) {\n\t\tconst self = this;\n\t\t// TODO: ensure a trailing slash / use path.join where appropriate\n\n\t\tvar $folder_view = $(`<div class=\"folder-view\" tabindex=\"0\">`);\n\n\t\tthis.element = $folder_view[0];\n\n\t\tthis.items = [];\n\n\t\tthis.add_item = (folder_view_item) => {\n\t\t\t$folder_view.append(folder_view_item.element);\n\t\t\tthis.items.push(folder_view_item);\n\t\t\t// if (this.items.length === 1) {\n\t\t\t// \t// this.items[0].element.focus();\n\t\t\t// \tthis.items[0].element.classList.add(\"focused\");\n\t\t\t// }\n\t\t};\n\n\t\t// config:\n\t\t// - [x] view_mode\n\t\t// - [x] sort_mode\n\t\t// - [ ] auto_arrange\n\t\t// - [ ] icon_positions\n\t\t// - [x] view_as_web_page\n\n\t\tthis.config = {};\n\t\tvar storage_key = `folder-config:${asDesktop ? \"desktop\" : folder_path}`;\n\t\ttry {\n\t\t\tconst config_json = localStorage.getItem(storage_key);\n\t\t\tconst config = JSON.parse(config_json);\n\t\t\tif (config) {\n\t\t\t\tObject.assign(this.config, config);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Failed to read folder config:\", e);\n\t\t}\n\t\t// Handling defaults and invalid values at the same time\n\t\tif (!FolderView.VIEW_MODES[this.config.view_mode]) {\n\t\t\tthis.config.view_mode = asDesktop ?\n\t\t\t\tFolderView.VIEW_MODES.DESKTOP :\n\t\t\t\tFolderView.VIEW_MODES.LARGE_ICONS;\n\t\t}\n\t\tif (!FolderView.SORT_MODES[this.config.sort_mode]) {\n\t\t\tthis.config.sort_mode = FolderView.SORT_MODES.NAME;\n\t\t}\n\t\t///this.config.view_as_web_page ??= folder_path !== \"/desktop/\";\n\t\tif (!this.config.view_as_web_page) {\n\t\t\tthis.config.view_as_web_page = folder_path !== \"/desktop/\";\n\t\t}\n\n\t\tthis.element.dataset.viewMode = this.config.view_mode;\n\t\tthis.configure = (config_props) => {\n\t\t\tObject.assign(this.config, config_props);\n\t\t\tif (config_props.view_mode) {\n\t\t\t\tthis.element.dataset.viewMode = config_props.view_mode;\n\t\t\t}\n\t\t\tthis.arrange_icons();\n\t\t\ttry {\n\t\t\t\tlocalStorage.setItem(storage_key, JSON.stringify(this.config));\n\t\t\t} catch (e) {\n\t\t\t\tconsole.error(\"Can't write to localStorage:\", e);\n\t\t\t}\n\t\t\t///onConfigure?.(config_props);\n\t\t\tif (onConfigure) {\n\t\t\t\tonConfigure(config_props);\n\t\t\t}\n\t\t};\n\n\t\tthis.cycle_view_mode = () => {\n\t\t\t// const view_modes = Object.values(FolderView.VIEW_MODES);\n\t\t\tconst view_modes = [\n\t\t\t\t// FolderView.VIEW_MODES.THUMBNAILS, conditionally?\n\t\t\t\tFolderView.VIEW_MODES.LARGE_ICONS,\n\t\t\t\tFolderView.VIEW_MODES.SMALL_ICONS,\n\t\t\t\tFolderView.VIEW_MODES.LIST,\n\t\t\t\t// FolderView.VIEW_MODES.DETAILS, // same as list for now\n\t\t\t];\n\t\t\tconst current_view_mode_index = view_modes.indexOf(this.config.view_mode);\n\t\t\tconst next_view_mode_index = (current_view_mode_index + 1) % view_modes.length;\n\t\t\tthis.configure({ view_mode: view_modes[next_view_mode_index] });\n\t\t};\n\n\t\tlet waiting_on_stats = false;\n\t\tthis.arrange_icons = () => {\n\t\t\tif (waiting_on_stats) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!self.element.isConnected) { // checking parentElement doesn't work if under a shadowRoot\n\t\t\t\t// console.trace(\"not in DOM\");\n\t\t\t\treturn; // prevent errors computing layout if folder view removed before stats resolve\n\t\t\t}\n\t\t\tconst pending_promises = this.items.map((item) => item.pendingStatPromise).filter(Boolean);\n\t\t\tconst any_pending = pending_promises.length > 0;\n\t\t\tif (any_pending) {\n\t\t\t\tif (!waiting_on_stats) {\n\t\t\t\t\t// should I choose a batch size? or is waiting on all stats fine?\n\t\t\t\t\t// batches mean that it would update multiple times, which could be jarring.\n\t\t\t\t\tPromise.allSettled(pending_promises).then(() => {\n\t\t\t\t\t\twaiting_on_stats = false;\n\t\t\t\t\t\tself.arrange_icons();\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\twaiting_on_stats = true;\n\t\t\t}\n\t\t\tconst horizontal_first =\n\t\t\t\tthis.config.view_mode === FolderView.VIEW_MODES.LARGE_ICONS ||\n\t\t\t\tthis.config.view_mode === FolderView.VIEW_MODES.SMALL_ICONS;\n\t\t\tconst large_icons =\n\t\t\t\tthis.config.view_mode === FolderView.VIEW_MODES.LARGE_ICONS ||\n\t\t\t\tthis.config.view_mode === FolderView.VIEW_MODES.DESKTOP;\n\t\t\tconst icon_size = icon_size_by_view_mode[this.config.view_mode] || 32;\n\n\t\t\tconst grid_size_x = large_icons ? grid_size_x_for_large_icons : grid_size_x_for_small_icons;\n\t\t\tconst grid_size_y = large_icons ? grid_size_y_for_large_icons : grid_size_y_for_small_icons;\n\t\t\tvar x = 0;\n\t\t\tvar y = 0;\n\t\t\tconst dir_ness = (item) =>\n\t\t\t\t// system folders always go first\n\t\t\t\t// not all system folder shortcuts on the desktop have real paths (currently)\n\t\t\t\t// so we can't check system_folder_path_to_name, need a separate attribute.\n\t\t\t\t// system_folder_path_to_name[item.file_path] ? 2 :\n\t\t\t\titem.is_system_folder ? 2 :\n\t\t\t\t\t// then folders, then everything else\n\t\t\t\t\t///item.resolvedStats?.isDirectory() ? 1 : 0;\n\t\t\t\t\titem.resolvedStats && item.resolvedStats.isDirectory() ? 1 : 0;\n\t\t\tconst get_ext = (item) => (item.file_path ||/*??*/ \"\").split(\".\").pop();\n\t\t\tif (this.config.sort_mode === FolderView.SORT_MODES.NAME) {\n\t\t\t\tthis.items.sort((a, b) =>\n\t\t\t\t\tdir_ness(b) - dir_ness(a) ||\n\t\t\t\t\t(a.title ||/*??*/ \"\").localeCompare(b.title ||/*??*/ \"\")\n\t\t\t\t);\n\t\t\t} else if (this.config.sort_mode === FolderView.SORT_MODES.TYPE) {\n\t\t\t\tthis.items.sort((a, b) =>\n\t\t\t\t\tdir_ness(b) - dir_ness(a) ||\n\t\t\t\t\t(get_ext(a) ||/*??*/ \"\").localeCompare(get_ext(b) ||/*??*/ \"\")\n\t\t\t\t);\n\t\t\t} else if (this.config.sort_mode === FolderView.SORT_MODES.SIZE) {\n\t\t\t\tthis.items.sort((a, b) =>\n\t\t\t\t\tdir_ness(b) - dir_ness(a) ||\n\t\t\t\t\t(a.resolvedStats.size ||/*??*/ 0) - (b.resolvedStats && b.resolvedStats.size ||/*??*/ 0)\n\t\t\t\t);\n\t\t\t} else if (this.config.sort_mode === FolderView.SORT_MODES.DATE) {\n\t\t\t\tthis.items.sort((a, b) =>\n\t\t\t\t\tdir_ness(b) - dir_ness(a) ||\n\t\t\t\t\t(a.resolvedStats && a.resolvedStats.mtime ||/*??*/ 0) - (b.resolvedStats && b.resolvedStats.mtime ||/*??*/ 0)\n\t\t\t\t);\n\t\t\t}\n\t\t\tfor (const item of this.items) {\n\t\t\t\t$(item.element).css({\n\t\t\t\t\tleft: x,\n\t\t\t\t\ttop: y,\n\t\t\t\t});\n\t\t\t\tif (horizontal_first) {\n\t\t\t\t\tx += grid_size_x;\n\t\t\t\t\tif (x + grid_size_x > $folder_view[0].clientWidth) {\n\t\t\t\t\t\ty += grid_size_y;\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ty += grid_size_y;\n\t\t\t\t\tif (y + grid_size_y > $folder_view[0].clientHeight) {\n\t\t\t\t\t\tx += grid_size_x;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\titem.setIconSize(icon_size);\n\n\t\t\t\t// apply sort - well, I'm positioning things absolutely, so I don't need to do this (AS LONG AS I DON'T ASSUME THE DOM ORDER, and use self.items instead)\n\t\t\t\t// and this is very slow for large folders.\n\t\t\t\t// this.element.appendChild(item.element);\n\t\t\t}\n\n\t\t\tif (!any_pending) {\n\t\t\t\t// this.items[0].element.classList.add(\"focused\");\n\t\t\t\tthis.items.forEach((item, index) => {\n\t\t\t\t\titem.element.classList.toggle(\"focused\", index === 0);\n\t\t\t\t});\n\t\t\t\t// console.log(\"this.element.ownerDocument.activeElement\", this.element.ownerDocument.activeElement);\n\t\t\t\t// if (this.element.ownerDocument.activeElement === this.element) {\n\t\t\t\tthis.items[0] && this.items[0].element.focus();\n\t\t\t\t// }\n\t\t\t\tupdateStatus();\n\t\t\t}\n\t\t};\n\n\t\tfunction updateStatus() {\n\t\t\tonStatus && onStatus({\n\t\t\t\titems: self.items,\n\t\t\t\tselectedItems: self.items.filter((item) => item.element.classList.contains(\"selected\")),\n\t\t\t});\n\t\t}\n\n\t\tfunction deleteRecursiveSync(fs, itemPath) {\n\t\t\tif (fs.statSync(itemPath).isDirectory()) {\n\t\t\t\tfor (const childItemName of fs.readdirSync(itemPath)) {\n\t\t\t\t\tdeleteRecursiveSync(itemPath + \"/\" + childItemName);\n\t\t\t\t}\n\t\t\t\tfs.rmdirSync(itemPath);\n\t\t\t} else {\n\t\t\t\tfs.unlinkSync(itemPath);\n\t\t\t}\n\t\t}\n\n\t\tself.focus = function () {\n\t\t\tif ($folder_view.is(\":focus-within\")) {\n\t\t\t\treturn; // don't mess with renaming inputs, for instance, if you click on the input\n\t\t\t}\n\t\t\t$folder_view.focus();\n\t\t\t// This doesn't do much if it's yet to be populated:\n\t\t\tif ($folder_view.find(\".desktop-icon.focused\").length === 0) {\n\t\t\t\tthis.items[0] && this.items[0].element.focus();\n\t\t\t}\n\t\t\t// Initial focus is handled in arrange_icons currently.\n\t\t};\n\n\t\tself.select_all = function () {\n\t\t\t$folder_view.find(\".desktop-icon\").addClass(\"selected\");\n\t\t\tupdateStatus();\n\t\t};\n\n\t\tself.select_inverse = function () {\n\t\t\t$folder_view.find(\".desktop-icon\").each(function () {\n\t\t\t\t$(this).toggleClass(\"selected\");\n\t\t\t});\n\t\t\tupdateStatus();\n\t\t};\n\n\t\tself.delete_selected = function () {\n\t\t\tconst selected_file_paths = $folder_view.find(\".desktop-icon.selected\")\n\t\t\t\t.toArray().map((icon_el) => icon_el.dataset.filePath)\n\t\t\t\t.filter((file_path) => system_folder_path_to_name[file_path] === undefined);\n\n\t\t\tif (selected_file_paths.length === 0) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// @NOTE: if system setting for displaying file extensions was implemented, this should be changed...\n\t\t\tconst name_of_first = $folder_view.find(\".desktop-icon.selected .title\").text().replace(/\\.([^.]+)$/, \"\");\n\t\t\tshowMessageBox({\n\t\t\t\ttitle: selected_file_paths.length === 1 ? \"Confirm File Delete\" : \"Confirm Multiple File Delete\",\n\t\t\t\tmessage: selected_file_paths.length === 1 ?\n\t\t\t\t\t`Are you sure you want to delete '${name_of_first}'?` :\n\t\t\t\t\t`Are you sure you want to delete these ${selected_file_paths.length} items?`,\n\t\t\t\tbuttons: [\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"Yes\",\n\t\t\t\t\t\tvalue: \"yes\",\n\t\t\t\t\t\tdefault: true,\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tlabel: \"No\",\n\t\t\t\t\t\tvalue: \"no\",\n\t\t\t\t\t},\n\t\t\t\t],\n\t\t\t\ticonID: \"nuke\",\n\t\t\t}).then((result) => {\n\t\t\t\tif (result !== \"yes\") {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tFilesystemSetup.withFilesystem(function () {\n\t\t\t\t\tconst fs = BrowserFS.BFSRequire('fs');\n\t\t\t\t\tlet num_deleted = 0;\n\t\t\t\t\tfor (const file_path of selected_file_paths) {\n\t\t\t\t\t\tlet single_delete_success = false;\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tdeleteRecursiveSync(fs, file_path);\n\t\t\t\t\t\t\tsingle_delete_success = true;\n\t\t\t\t\t\t\tnum_deleted += 1;\n\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\tconsole.log(\"failed to delete\", file_path, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (single_delete_success) {\n\t\t\t\t\t\t\tself.items.forEach((item) => {\n\t\t\t\t\t\t\t\tif (item.element.dataset.filePath === file_path) {\n\t\t\t\t\t\t\t\t\titem.element.remove();\n\t\t\t\t\t\t\t\t\tupdateStatus();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: pluralization, and be more specific about folders vs files vs selected items, and total\n\t\t\t\t\tif (num_deleted < selected_file_paths.length) {\n\t\t\t\t\t\talert(`Failed to delete ${selected_file_paths.length - num_deleted} items.`);\n\t\t\t\t\t}\n\t\t\t\t\t// self.refresh();\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\n\t\tself.start_rename = () => {\n\t\t\tfor (const item of self.items) {\n\t\t\t\tif (item.element.classList.contains(\"focused\")) {\n\t\t\t\t\titem.start_rename();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\t// Read the folder and create icon items\n\t\tFilesystemSetup.withFilesystem(function () {\n\t\t\tvar fs = BrowserFS.BFSRequire('fs');\n\t\t\tfs.readdir(folder_path, function (error, contents) {\n\t\t\t\tif (error) {\n\t\t\t\t\talert(\"Failed to read contents of the directory \" + folder_path);\n\t\t\t\t\tthrow error;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0; i < contents.length; i++) {\n\t\t\t\t\tvar fname = contents[i];\n\t\t\t\t\tadd_fs_item(fname, -1000, -1000);\n\t\t\t\t}\n\t\t\t\tself.arrange_icons();\n\t\t\t});\n\t\t});\n\n\t\t// NOTE: in Windows, icons by default only get moved if they go offscreen (by maybe half the grid size)\n\t\t// we're handling it as if Auto Arrange is on (@TODO: support Auto Arrange off)\n\t\tconst resizeObserver = new ResizeObserver(entries => {\n\t\t\tself.arrange_icons();\n\t\t});\n\t\tresizeObserver.observe(self.element);\n\n\t\t// Handle selecting icons\n\t\t(function () {\n\t\t\tvar $marquee = $(\"<div class='marquee'/>\").appendTo($folder_view).hide();\n\t\t\tvar start = { x: 0, y: 0 };\n\t\t\tvar current = { x: 0, y: 0 };\n\t\t\tvar dragging = false;\n\t\t\tvar drag_update = function () {\n\t\t\t\tvar min_x = Math.min(start.x, current.x);\n\t\t\t\tvar min_y = Math.min(start.y, current.y);\n\t\t\t\tvar max_x = Math.max(start.x, current.x);\n\t\t\t\tvar max_y = Math.max(start.y, current.y);\n\t\t\t\t$marquee.show().css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\tleft: min_x,\n\t\t\t\t\ttop: min_y,\n\t\t\t\t\twidth: max_x - min_x,\n\t\t\t\t\theight: max_y - min_y,\n\t\t\t\t});\n\t\t\t\t$folder_view.find(\".desktop-icon\").each(function (i, folder_view_icon) {\n\t\t\t\t\t// Note: this is apparently considerably more complex in Windows 98\n\t\t\t\t\t// like things are not considered the same heights and/or positions based on the size of their names\n\t\t\t\t\tvar icon_offset = $(folder_view_icon).offset();\n\t\t\t\t\tvar icon_left = parseFloat($(folder_view_icon).css(\"left\"));\n\t\t\t\t\tvar icon_top = parseFloat($(folder_view_icon).css(\"top\"));\n\t\t\t\t\tvar icon_width = $(folder_view_icon).width();\n\t\t\t\t\tvar icon_height = $(folder_view_icon).height();\n\t\t\t\t\tfolder_view_icon.classList.toggle(\"selected\",\n\t\t\t\t\t\ticon_left < max_x &&\n\t\t\t\t\t\ticon_top < max_y &&\n\t\t\t\t\t\ticon_left + icon_width > min_x &&\n\t\t\t\t\t\ticon_top + icon_height > min_y\n\t\t\t\t\t);\n\t\t\t\t});\n\t\t\t\tupdateStatus();\n\t\t\t};\n\t\t\t$folder_view.on(\"pointerdown\", \".desktop-icon\", function (e) {\n\t\t\t\tconst item_el = e.currentTarget;\n\t\t\t\titem_el._was_selected_at_pointerdown = item_el.classList.contains(\"selected\");\n\t\t\t\tselect_item(item_el, e, true);\n\t\t\t});\n\t\t\t$folder_view.on(\"pointerdown\", function (e) {\n\t\t\t\t// TODO: allow a margin of mouse movement before starting selecting\n\t\t\t\tvar view_was_focused = $folder_view.is(\":focus-within\");\n\t\t\t\tself.focus();\n\t\t\t\tvar $icon = $(e.target).closest(\".desktop-icon\");\n\t\t\t\t$marquee.hide();\n\t\t\t\t// var folder_view_offset = $folder_view.offset();\n\t\t\t\tvar folder_view_offset = self.element.getBoundingClientRect();\n\t\t\t\tstart = { x: e.pageX - folder_view_offset.left + $folder_view[0].scrollLeft, y: e.pageY - folder_view_offset.top + $folder_view[0].scrollTop };\n\t\t\t\tcurrent = { x: e.pageX - folder_view_offset.left + $folder_view[0].scrollLeft, y: e.pageY - folder_view_offset.top + $folder_view[0].scrollTop };\n\t\t\t\tif ($icon.length > 0) {\n\t\t\t\t\t$marquee.hide();\n\t\t\t\t\tset_dragging_file_paths($(\".desktop-icon.selected\").get().map((icon) =>\n\t\t\t\t\t\ticon.dataset.filePath\n\t\t\t\t\t).filter((file_path) => file_path));\n\t\t\t\t} else {\n\t\t\t\t\tset_dragging_file_paths([]);\n\t\t\t\t\t// start dragging marquee unless over scrollbar\n\t\t\t\t\tlet scrollbar_width = $folder_view[0].offsetWidth - $folder_view[0].clientWidth;\n\t\t\t\t\tlet scrollbar_height = $folder_view[0].offsetHeight - $folder_view[0].clientHeight;\n\t\t\t\t\tscrollbar_width += 2; // for marquee border (@TODO: make marquee unable to cause scrollbar, by putting it in an overflow: hidden container)\n\t\t\t\t\tscrollbar_height += 2; // for marquee border\n\t\t\t\t\tconst rect = $folder_view[0].getBoundingClientRect();\n\t\t\t\t\tconst over_scrollbar = e.clientX > rect.right - scrollbar_width || e.clientY > rect.bottom - scrollbar_height;\n\t\t\t\t\t// console.log(`over_scrollbar: ${over_scrollbar}, e.clientX: ${e.clientX}, rect.right - scrollbar_width: ${rect.right - scrollbar_width}`);\n\t\t\t\t\tdragging = !over_scrollbar;\n\t\t\t\t\t// don't deselect right away unless the \n\t\t\t\t\t// TODO: deselect on pointerUP, if the desktop was focused\n\t\t\t\t\t// or when starting selecting (re: TODO: allow a margin of movement before starting selecting)\n\t\t\t\t\tif (dragging && view_was_focused) {\n\t\t\t\t\t\tdrag_update();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t$($folder_view[0].ownerDocument).on(\"pointermove\", handle_pointermove);\n\t\t\t\t$($folder_view[0].ownerDocument).on(\"pointerup blur\", handle_pointerup_blur);\n\t\t\t});\n\t\t\tfunction handle_pointermove (e) {\n\t\t\t\t// var folder_view_offset = $folder_view.offset();\n\t\t\t\tvar folder_view_offset = self.element.getBoundingClientRect();\n\t\t\t\tcurrent = { x: e.pageX - folder_view_offset.left + $folder_view[0].scrollLeft, y: e.pageY - folder_view_offset.top + $folder_view[0].scrollTop };\n\t\t\t\t// clamp coordinates to within folder view\n\t\t\t\t// This accomplishes three things:\n\t\t\t\t// 1. it improves the visual coherence of the marquee as an object\n\t\t\t\t// 2. it makes the marquee not cause a scrollbar\n\t\t\t\t// 3. it prevents selecting things you can't see\n\t\t\t\tconst scrollbar_width = $folder_view.width() - $folder_view[0].clientWidth;\n\t\t\t\tconst scrollbar_height = $folder_view.height() - $folder_view[0].clientHeight;\n\t\t\t\tconst clamp_left = $folder_view[0].scrollLeft;\n\t\t\t\tconst clamp_top = $folder_view[0].scrollTop;\n\t\t\t\tconst clamp_right = $folder_view.width() + $folder_view[0].scrollLeft - scrollbar_width;\n\t\t\t\tconst clamp_bottom = $folder_view.height() + $folder_view[0].scrollTop - scrollbar_height;\n\t\t\t\tcurrent.x = Math.max(clamp_left, Math.min(clamp_right, current.x));\n\t\t\t\tcurrent.y = Math.max(clamp_top, Math.min(clamp_bottom, current.y));\n\t\t\t\tif (dragging) {\n\t\t\t\t\tdrag_update();\n\t\t\t\t\t// scroll the view by dragging the mouse at/past the edge\n\t\t\t\t\tconst scroll_speed = 10;\n\t\t\t\t\tif (current.x === clamp_left) {\n\t\t\t\t\t\t$folder_view[0].scrollLeft -= scroll_speed;\n\t\t\t\t\t} else if (current.x === clamp_right) {\n\t\t\t\t\t\t$folder_view[0].scrollLeft += scroll_speed;\n\t\t\t\t\t}\n\t\t\t\t\tif (current.y === clamp_top) {\n\t\t\t\t\t\t$folder_view[0].scrollTop -= scroll_speed;\n\t\t\t\t\t} else if (current.y === clamp_bottom) {\n\t\t\t\t\t\t$folder_view[0].scrollTop += scroll_speed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tfunction handle_pointerup_blur() {\n\t\t\t\t$marquee.hide();\n\t\t\t\tdragging = false;\n\t\t\t\tset_dragging_file_paths([]);\n\t\t\t\t$($folder_view[0].ownerDocument).off(\"pointermove\", handle_pointermove);\n\t\t\t\t$($folder_view[0].ownerDocument).off(\"pointerup blur\", handle_pointerup_blur);\n\t\t\t};\n\t\t})();\n\n\t\tlet search_string = \"\";\n\t\tlet search_timeout;\n\n\t\t$folder_view.on(\"keydown\", function (e) {\n\t\t\t// console.log(\"keydown\", e.isDefaultPrevented());\n\n\t\t\tif (e.target.tagName === \"INPUT\" || e.target.tagName === \"TEXTAREA\") {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (e.key == \"Enter\") {\n\t\t\t\t$folder_view.find(\".desktop-icon.selected\").trigger(\"dblclick\");\n\t\t\t} else if (e.ctrlKey && e.key == \"a\") {\n\t\t\t\tfolder_view.select_all();\n\t\t\t\te.preventDefault();\n\t\t\t} else if (e.key == \"Delete\") {\n\t\t\t\tself.delete_selected();\n\t\t\t\te.preventDefault();\n\t\t\t} else if (\n\t\t\t\te.key == \"ArrowLeft\" ||\n\t\t\t\te.key == \"ArrowRight\" ||\n\t\t\t\te.key == \"ArrowUp\" ||\n\t\t\t\te.key == \"ArrowDown\"\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tconst move_x = e.key == \"ArrowLeft\" ? -1 : e.key == \"ArrowRight\" ? 1 : 0;\n\t\t\t\tconst move_y = e.key == \"ArrowUp\" ? -1 : e.key == \"ArrowDown\" ? 1 : 0;\n\t\t\t\tnavigate_grid(move_x, move_y, e);\n\t\t\t\t// @TODO: wrap around columns in list view\n\t\t\t} else if (\n\t\t\t\te.key == \"PageUp\" ||\n\t\t\t\te.key == \"PageDown\"\n\t\t\t) {\n\t\t\t\te.preventDefault();\n\t\t\t\tif (self.config.view_mode === FolderView.VIEW_MODES.LIST) {\n\t\t\t\t\tconst x_dir = e.key == \"PageUp\" ? -1 : 1;\n\t\t\t\t\tconst full_page_size = $folder_view.width();\n\t\t\t\t\tconst item_width = $folder_view.find(\".desktop-icon\").outerWidth();\n\t\t\t\t\tconst page_increment = full_page_size - item_width;\n\t\t\t\t\tfor (let increment = page_increment; increment > 0; increment -= item_width) {\n\t\t\t\t\t\tif (navigate_grid(x_dir * increment / item_width, 0, e)) { // grid units\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst y_dir = e.key == \"PageUp\" ? -1 : 1;\n\t\t\t\t\tconst full_page_size = $folder_view.height();\n\t\t\t\t\tconst item_height = $folder_view.find(\".desktop-icon\").outerHeight();\n\t\t\t\t\tconst page_increment = full_page_size - item_height;\n\t\t\t\t\tfor (let increment = page_increment; increment > 0; increment -= item_height) {\n\t\t\t\t\t\tif (navigate_grid(0, y_dir * increment / item_height, e)) { // grid units\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (e.key == \"Home\") {\n\t\t\t\te.preventDefault();\n\t\t\t\tselect_item(self.items[0], e);\n\t\t\t} else if (e.key == \"End\") {\n\t\t\t\te.preventDefault();\n\t\t\t\tselect_item(self.items[self.items.length - 1], e);\n\t\t\t} else if (e.key == \" \" && search_string.length === 0) {\n\t\t\t\t// Usually there's something focused,\n\t\t\t\t// so this is pretty \"niche\", but space bar selects the focused item.\n\t\t\t\t// Ctrl+Space toggles selection of the focused item.\n\t\t\t\te.preventDefault();\n\t\t\t\tif ((e.ctrlKey || e.metaKey) && $folder_view.find(\".desktop-icon.selected\").length > 0) {\n\t\t\t\t\t$folder_view.find(\".desktop-icon.focused\").toggleClass(\"selected\");\n\t\t\t\t} else {\n\t\t\t\t\t$folder_view.find(\".desktop-icon.focused\").addClass(\"selected\"); // don't use select_item() as it shouldn't unselect anything\n\t\t\t\t}\n\t\t\t\tupdateStatus();\n\t\t\t} else if (e.key === \"F2\") {\n\t\t\t\te.preventDefault();\n\t\t\t\tself.start_rename();\n\t\t\t} else {\n\t\t\t\tif (e.isDefaultPrevented() || e.ctrlKey || e.altKey || e.metaKey) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (search_timeout) {\n\t\t\t\t\tclearTimeout(search_timeout);\n\t\t\t\t}\n\t\t\t\tif (search_string === e.key) {\n\t\t\t\t\t// cycle through items starting with the same letter\n\t\t\t\t\t// Note: not adding to search_string here, so it stays as e.key\n\t\t\t\t\t// @TODO: what if you have an item like \"Llama Photos\", can you not search for \"Llama\" to go to it, in the presence of other 'L' items?\n\t\t\t\t\tconst candidates = self.items.filter((item) => {\n\t\t\t\t\t\tconst title = item.element.querySelector(\".title\").textContent; // @TODO: proper access\n\t\t\t\t\t\treturn title.toLocaleLowerCase().startsWith(search_string.toLocaleLowerCase());\n\t\t\t\t\t});\n\t\t\t\t\tif (candidates.length > 0) {\n\t\t\t\t\t\tconst index = candidates.findIndex((item) => item.element.classList.contains(\"focused\"));\n\t\t\t\t\t\tif (index === -1) {\n\t\t\t\t\t\t\tselect_item(candidates[0], e);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tselect_item(candidates[(index + 1) % candidates.length], e);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// focus item matching search string\n\t\t\t\t\tif (e.key !== \"Shift\" && e.key !== \"Compose\") { // Note: composition doesn't actually work; I'd need an input element to do this properly\n\t\t\t\t\t\tsearch_string += e.key;\n\t\t\t\t\t}\n\t\t\t\t\t// console.log(\"search_string: \" + search_string);\n\t\t\t\t\tsearch_timeout = setTimeout(function () {\n\t\t\t\t\t\tsearch_string = \"\";\n\t\t\t\t\t\t// console.log(\"reset search_string\");\n\t\t\t\t\t}, 1000);\n\n\t\t\t\t\tif (search_string.length > 0) {\n\t\t\t\t\t\tfor (const item of self.items) {\n\t\t\t\t\t\t\tconst title = item.element.querySelector(\".title\").textContent; // @TODO: proper access\n\t\t\t\t\t\t\tif (title.toLocaleLowerCase().startsWith(search_string.toLocaleLowerCase())) {\n\t\t\t\t\t\t\t\tselect_item(item, {}); // passing fake event so it doesn't use shiftKey to determine multi-select\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tvar selection_anchor_item_el;\n\n\t\tfunction select_item(item_or_item_el, event, delay_scroll) {\n\t\t\tconst item_el_to_select = item_or_item_el instanceof Element ? item_or_item_el : item_or_item_el.element;\n\t\t\tconst extend_selection = event.shiftKey;\n\t\t\tif (selection_anchor_item_el && !self.items.some(item => item.element === selection_anchor_item_el)) {\n\t\t\t\tselection_anchor_item_el = null; // item was removed somehow\n\t\t\t}\n\t\t\tif (extend_selection && !selection_anchor_item_el) {\n\t\t\t\t// select_item() hasn't been called yet (e.g. hitting Shift+Down without first hitting an arrow key without Shift, in a newly loaded folder view)\n\t\t\t\t// use the focused item as the anchor\n\t\t\t\tselection_anchor_item_el = self.items.find((item) => item.element.classList.contains(\"focused\"))/*?*/.element ||/*??*/ item_el_to_select;\n\t\t\t}\n\t\t\t// console.log(\"select_item\", item_or_item_el, event, \"extend_selection\", extend_selection);\n\t\t\t$folder_view.find(\".desktop-icon\").each(function (i, item_el) {\n\t\t\t\tif (extend_selection) {\n\t\t\t\t\t// select items in a rectangle between the anchor and the new item\n\t\t\t\t\tconst anchor_rect = selection_anchor_item_el.getBoundingClientRect();\n\t\t\t\t\tconst item_el_to_select_rect = item_el_to_select.getBoundingClientRect();\n\t\t\t\t\tconst item_el_rect = item_el.getBoundingClientRect();\n\t\t\t\t\tconst rectangle = {\n\t\t\t\t\t\ttop: Math.min(anchor_rect.top, item_el_to_select_rect.top),\n\t\t\t\t\t\tleft: Math.min(anchor_rect.left, item_el_to_select_rect.left),\n\t\t\t\t\t\tbottom: Math.max(anchor_rect.bottom, item_el_to_select_rect.bottom),\n\t\t\t\t\t\tright: Math.max(anchor_rect.right, item_el_to_select_rect.right)\n\t\t\t\t\t};\n\t\t\t\t\t$(item_el).toggleClass(\"selected\", (\n\t\t\t\t\t\titem_el_rect.top >= rectangle.top &&\n\t\t\t\t\t\titem_el_rect.left >= rectangle.left &&\n\t\t\t\t\t\titem_el_rect.bottom <= rectangle.bottom &&\n\t\t\t\t\t\titem_el_rect.right <= rectangle.right\n\t\t\t\t\t));\n\t\t\t\t} else {\n\t\t\t\t\tif (event.type === \"pointerdown\" && (event.ctrlKey || event.metaKey)) {\n\t\t\t\t\t\t// toggle with Ctrl+click\n\t\t\t\t\t\tif (item_el === item_el_to_select) {\n\t\t\t\t\t\t\t$(item_el).toggleClass(\"selected\");\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// select with click or arrow keys,\n\t\t\t\t\t\t// but if holding Ctrl it should only move focus, not select.\n\t\t\t\t\t\tif (!event.ctrlKey && !event.metaKey) {\n\t\t\t\t\t\t\titem_el.classList.toggle(\"selected\", item_el === item_el_to_select);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\titem_el.classList.toggle(\"focused\", item_el === item_el_to_select);\n\t\t\t});\n\t\t\tif (delay_scroll) {\n\t\t\t\t// Windows 98 does this for clicks.\n\t\t\t\t// I'm not sure if it's to make it less jarring (I feel like there's a case for that),\n\t\t\t\t// or if it's to avoid some problems with drag and drop perhaps.\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\titem_el_to_select.scrollIntoView({ block: \"nearest\" });\n\t\t\t\t}, 500);\n\t\t\t} else {\n\t\t\t\titem_el_to_select.scrollIntoView({ block: \"nearest\" });\n\t\t\t}\n\t\t\tupdateStatus();\n\n\t\t\tif (!event.shiftKey) {\n\t\t\t\tselection_anchor_item_el = item_el_to_select;\n\t\t\t}\n\t\t}\n\n\t\tfunction navigate_grid(move_x, move_y, event) {\n\t\t\t// @TODO: how this is supposed to work for icons not aligned to the grid?\n\t\t\t// I can imagine a few ways of doing it, like scanning for the nearest icon with a sweeping line or perhaps a \"cone\" (triangle) (changing width line)\n\t\t\t// but it'd be nice to know for sure\n\n\t\t\tlet $starting_icon = $folder_view.find(\".desktop-icon.focused\");\n\t\t\t// ideally we'd keep a focused icon always,\n\t\t\t// use the nearest icon upwards after a delete etc.\n\t\t\t// but I can't guarantee that\n\t\t\tif ($starting_icon.length == 0) {\n\t\t\t\t$starting_icon = $folder_view.find(\".desktop-icon\");\n\t\t\t}\n\t\t\tif ($starting_icon.length == 0) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t// @TODO: use the actual grid size, not a calculated item size\n\t\t\t// or make it more grid-agnostic (Windows 98 allowed freely moving icons around)\n\t\t\tconst item_width = $starting_icon.outerWidth();\n\t\t\tconst item_height = $starting_icon.outerHeight();\n\t\t\t// const item_pos = $starting_icon.position();\n\t\t\tconst item_pos = $starting_icon[0].getBoundingClientRect();\n\t\t\tlet x = item_pos.left;// + item_width / 2;\n\t\t\tlet y = item_pos.top;// + item_height / 2;\n\t\t\tx += move_x * item_width;\n\t\t\ty += move_y * item_height;\n\t\t\tconst candidates = $folder_view.find(\".desktop-icon\").toArray().sort(function (a, b) {\n\t\t\t\t// const a_pos = $(a).position();\n\t\t\t\t// const b_pos = $(b).position();\n\t\t\t\tconst a_pos = a.getBoundingClientRect();\n\t\t\t\tconst b_pos = b.getBoundingClientRect();\n\t\t\t\tconst a_dist = Math.abs(a_pos.left - x) + Math.abs(a_pos.top - y);\n\t\t\t\tconst b_dist = Math.abs(b_pos.left - x) + Math.abs(b_pos.top - y);\n\t\t\t\treturn a_dist - b_dist;\n\t\t\t});\n\t\t\tconst $icon = $(candidates[0]);\n\t\t\tif ($icon.length > 0) {\n\t\t\t\tselect_item($icon[0], event);\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\tvar stat = function (file_path) {\n\t\t\t// fs should be guaranteed available at this point\n\t\t\t// as this function is currently used\n\t\t\tvar fs = BrowserFS.BFSRequire('fs');\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tfs.stat(file_path, function (err, stats) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t}\n\t\t\t\t\tresolve(stats);\n\t\t\t\t});\n\t\t\t});\n\t\t};\n\t\tvar icon_id_from_stats_and_path = function (stats, file_path) {\n\t\t\tif (stats.isDirectory()) {\n\t\t\t\t// if extending this to different folder icons,\n\t\t\t\t// note that \"folder\" is relied on (for sorting)\n\t\t\t\treturn \"folder\";\n\t\t\t}\n\t\t\tvar file_extension = helpers.file_extension_from_path(file_path);\n\t\t\t// TODO: look inside exe for icons\n\t\t\tvar icon_name = file_extension_icons[file_extension.toLowerCase()];\n\t\t\treturn icon_name || \"document\";\n\t\t};\n\t\tvar icons_from_icon_id = function (icon_id) {\n\t\t\treturn {\n\t\t\t\t16: helpers.getIconPath(icon_id, 16),\n\t\t\t\t32: helpers.getIconPath(icon_id, 32),\n\t\t\t\t48: helpers.getIconPath(icon_id, 48),\n\t\t\t};\n\t\t};\n\n\t\t// var add_fs_item = function(file_path, x, y){\n\t\tvar add_fs_item = function (initial_file_name, x, y) {\n\t\t\tvar initial_file_path = folder_path + initial_file_name;\n\t\t\tvar item = new FolderViewItem({\n\t\t\t\ttitle: initial_file_name,\n\t\t\t\topen: async function () {\n\t\t\t\t\tif (openFolder) {\n\t\t\t\t\t\tlet stats = item.resolvedStats;\n\t\t\t\t\t\tif (!stats) {\n\t\t\t\t\t\t\tif (item.pendingStatPromise) {\n\t\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\t\tstats = await item.pendingStatPromise;\n\t\t\t\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\t\t\t\talert(`Failed to get info about '${item.file_path}':\\n\\n${error}`);\n\t\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\talert(`Cannot open '${item.file_path}'. File type information not available.`);\n\t\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (stats.isDirectory()) {\n\t\t\t\t\t\t\topenFolder(item.file_path);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif (openFileOrFolder) {\n\t\t\t\t\t\topenFileOrFolder(item.file_path);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\talert(`No handler for opening files or folders.`);\n\t\t\t\t},\n\t\t\t\trename: (new_name) => {\n\t\t\t\t\tvar fs = BrowserFS.BFSRequire('fs');\n\t\t\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\t\t\tconst new_file_path = folder_path + new_name;\n\t\t\t\t\t\tfs.rename(item.file_path, new_file_path, function (err) {\n\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\treturn reject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tresolve();\n\t\t\t\t\t\t\titem.file_path = new_file_path;\n\t\t\t\t\t\t\titem.title = new_name;\n\t\t\t\t\t\t\titem.element.dataset.filePath = new_file_path;\n\t\t\t\t\t\t\tif (item.resolvedStats) {\n\t\t\t\t\t\t\t\tconst icon_id = icon_id_from_stats_and_path(item.resolvedStats, new_file_path);\n\t\t\t\t\t\t\t\titem.setIcons(icons_from_icon_id(icon_id));\n\t\t\t\t\t\t\t} // else the icon will be updated when the stats are resolved\n\t\t\t\t\t\t});\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\tshortcut: initial_file_path.match(/\\.url$/),\n\t\t\t\tfile_path: initial_file_path,\n\t\t\t\ticonSize: icon_size_by_view_mode[self.config.view_mode],\n\t\t\t});\n\t\t\titem.pendingStatPromise = stat(initial_file_path);\n\t\t\titem.pendingStatPromise.then((stats) => {\n\t\t\t\titem.pendingStatPromise = null;\n\t\t\t\titem.resolvedStats = stats; // trying to indicate in the name the async nature\n\t\t\t\t// @TODO: know which sizes are available\n\t\t\t\tconst icon_id = icon_id_from_stats_and_path(stats, item.file_path);\n\t\t\t\titem.setIcons(icons_from_icon_id(icon_id));\n\t\t\t}, (error) => {\n\t\t\t\t// Without this, the folder view infinitely recursed arranging items because\n\t\t\t\t// it was waiting for the promise to be settled (resolved or rejected),\n\t\t\t\t// but checking for item.pendingStatPromise to see if it's still pending.\n\t\t\t\titem.pendingStatPromise = null;\n\t\t\t});\n\t\t\tself.add_item(item);\n\t\t\t$(item.element).css({\n\t\t\t\tleft: x,\n\t\t\t\ttop: y,\n\t\t\t});\n\t\t};\n\t\tvar drop_file = function (file, x, y) {\n\n\t\t\tvar Buffer = BrowserFS.BFSRequire('buffer').Buffer;\n\t\t\tvar fs = BrowserFS.BFSRequire('fs');\n\n\t\t\tvar file_path = folder_path + file.name;\n\n\t\t\tvar reader = new FileReader;\n\t\t\treader.onerror = function (error) {\n\t\t\t\tthrow error;\n\t\t\t};\n\t\t\treader.onload = function (e) {\n\t\t\t\tvar buffer = Buffer.from(reader.result);\n\t\t\t\tfs.writeFile(file_path, buffer, { flag: \"wx\" }, function (error) {\n\t\t\t\t\tif (error) {\n\t\t\t\t\t\tif (error.code === \"EEXIST\") {\n\t\t\t\t\t\t\t// TODO: options to replace or keep both files with numbers like \"file (1).txt\"\n\t\t\t\t\t\t\talert(\"File already exists!\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthrow error;\n\t\t\t\t\t}\n\t\t\t\t\t// TODO: could do utimes as well with file.lastModified or file.lastModifiedDate\n\n\t\t\t\t\tadd_fs_item(file.name, x, y);\n\t\t\t\t});\n\t\t\t};\n\t\t\treader.readAsArrayBuffer(file);\n\t\t};\n\n\t\tvar dragover_pageX = 0;\n\t\tvar dragover_pageY = 0;\n\t\t$folder_view.on(\"dragover\", function (e) {\n\t\t\te.preventDefault();\n\t\t\tdragover_pageX = e.originalEvent.pageX;\n\t\t\tdragover_pageY = e.originalEvent.pageY;\n\t\t});\n\t\t$folder_view.on(\"drop\", function (e) {\n\t\t\te.preventDefault();\n\t\t\tvar x = e.originalEvent.pageX || dragover_pageX;\n\t\t\tvar y = e.originalEvent.pageY || e.dragover_pageY\n\t\t\t// TODO: handle dragging icons onto other icons\n\t\t\twithFilesystem(function () {\n\t\t\t\tvar files = e.originalEvent.dataTransfer.files;\n\t\t\t\t$.map(files, function (file) {\n\t\t\t\t\t// TODO: stagger positions, don't just put everything on top of each other\n\t\t\t\t\t// also center on the mouse position; currently it's placed via the top left\n\t\t\t\t\tdrop_file(file, x, y);\n\t\t\t\t});\n\t\t\t});\n\t\t});\n\t}\n\n\treturn FolderView;\n});"]}