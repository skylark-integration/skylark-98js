{"version":3,"sources":["helpers.js"],"names":["define","$","win98js","Math","PI","window","web_server_root_for_icons","location","href","match","Cursor","cursor_def","join","DESKTOP_ICON_SIZE","TASKBAR_ICON_SIZE","TITLEBAR_ICON_SIZE","getIconPath","iconID","size","Canvas","width","height","t","new_canvas","document","createElement","new_ctx","getContext","imageSmoothingEnabled","mozImageSmoothingEnabled","webkitImageSmoothingEnabled","copy_of","drawImage","ctx","mustHaveMethods","obj","methodNames","methodName","console","error","TypeError","windowInterfaceMethods","file_name_from_path","file_path","split","pop","file_extension_from_path"],"mappings":";;;;;;;AAAAA,QACC,iBACA,WACC,SAASC,EAAEC,GAWAC,KAAKC,GAAKD,KAAKC,GAYlBH,EAAEI,QAkBX,MAAMC,EACLC,SAASC,KAAKC,MAAM,aACnBF,SAASC,KAAKC,MAAM,eAAe,GAAK,IACxC,IA+DF,OACCC,OAnFD,SAAgBC,GACf,MAAO,sBAAwBA,EAAW,GAAK,SAC9CA,EAAW,GAAGC,KAAK,KACnB,KAAOD,EAAW,IAiFnBE,kBA1EuB,GA2EvBC,kBA1EuB,GA2EvBC,mBA1EwB,GA2ExBC,YAlED,SAAqBC,EAAQC,GAC5B,OAAOZ,EAA4B,gBAAkBW,EAAS,IAAMC,EAAO,IAAMA,EAAO,QAkExFC,OA/DD,SAAgBC,EAAOC,GACtB,IApBUC,EAoBNC,GApBMD,EAoBS,SAnBZE,SAASC,cAAcH,IAoB1BI,EAAUH,EAAWI,WAAW,MAIpC,GAHAD,EAAQE,uBAAwB,EAChCF,EAAQG,0BAA2B,EACnCH,EAAQI,6BAA8B,EAClCV,GAASC,EAEZE,EAAWH,MAAQA,EACnBG,EAAWF,OAASA,MACd,CAEN,IAAIU,EAAUX,EACVW,IACHR,EAAWH,MAAQW,EAAQX,MAC3BG,EAAWF,OAASU,EAAQV,OAC5BK,EAAQM,UAAUD,EAAS,EAAG,IAIhC,OADAR,EAAWU,IAAMP,EACVH,GA4CPW,gBAzCD,SAAyBC,EAAKC,GAC7B,IAAK,MAAMC,KAAcD,EACxB,GAA8B,mBAAnBD,EAAIE,GAEd,MADAC,QAAQC,MAAM,iBAAkBF,EAAY,YAAaF,GACnD,IAAIK,UAAU,kBAAoBH,GAG1C,OAAO,GAmCPI,wBAhCA,QACA,WACA,aAGA,eACA,WAEA,gBACA,QACA,OACA,UACA,SACA,YAoBAC,oBAhBD,SAA6BC,GAC5B,OAAOA,EAAUC,MAAM,MAAMC,MAAMD,MAAM,KAAKC,OAiB9CC,yBAdD,SAAkCH,GACjC,OAAQA,EAAUlC,MAAM,cAAgB,CAAE,KAAK","file":"../helpers.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"./win98\"\n],function($,win98js){\n\tvar TAU =     //////|//////\n\t          /////     |     /////\n\t       ///         tau         ///\n\t     ///     ...--> | <--...     ///\n\t   ///     -'   one | turn  '-     ///\n\t  //     .'         |         '.     //\n\t //     /           |           \\     //\n\t//     |            | <-..       |     //\n\t//    |          .->|     \\       |    //\n\t//    |         /   |      |      |    //\n\t- - - - - - Math.PI + Math.PI - - - - - 0\n\t//    |         \\   |      |      |    //\n\t//    |          '->|     /       |    //\n\t//     |            | <-''       |     //\n\t //     \\           |           /     //\n\t  //     '.         |         .'     //\n\t   ///     -.       |       .-     ///\n\t     ///     '''----|----'''     ///\n\t       ///          |          ///\n\t         //////     |     /////\n\t              //////|//////          C/r;\n\n\tvar $G = $(window);\n\n\tfunction Cursor(cursor_def) {\n\t\treturn \"url(images/cursors/\" + cursor_def[0] + \".png) \" +\n\t\t\tcursor_def[1].join(\" \") +\n\t\t\t\", \" + cursor_def[2]\n\t}\n\n\tfunction E(t) {\n\t\treturn document.createElement(t);\n\t}\n\n\tvar DESKTOP_ICON_SIZE = 32;\n\tvar TASKBAR_ICON_SIZE = 16;\n\tvar TITLEBAR_ICON_SIZE = 16;\n\n\t// For Wayback Machine, match URLs like https://web.archive.org/web/20191213113214/https://98.js.org/\n\t// (also match URLs like https://98.js.org/ because why not)\n\tconst web_server_root_for_icons =\n\t\tlocation.href.match(/98.js.org/) ?\n\t\t\tlocation.href.match(/.*98.js.org/)[0] + \"/\" :\n\t\t\t\"/\";\n\n\tfunction getIconPath(iconID, size) {\n\t\treturn web_server_root_for_icons + \"images/icons/\" + iconID + \"-\" + size + \"x\" + size + \".png\";\n\t}\n\n\tfunction Canvas(width, height) {\n\t\tvar new_canvas = E(\"canvas\");\n\t\tvar new_ctx = new_canvas.getContext(\"2d\");\n\t\tnew_ctx.imageSmoothingEnabled = false;\n\t\tnew_ctx.mozImageSmoothingEnabled = false;\n\t\tnew_ctx.webkitImageSmoothingEnabled = false;\n\t\tif (width && height) {\n\t\t\t// new Canvas(width, height)\n\t\t\tnew_canvas.width = width;\n\t\t\tnew_canvas.height = height;\n\t\t} else {\n\t\t\t// new Canvas(image)\n\t\t\tvar copy_of = width;\n\t\t\tif (copy_of) {\n\t\t\t\tnew_canvas.width = copy_of.width;\n\t\t\t\tnew_canvas.height = copy_of.height;\n\t\t\t\tnew_ctx.drawImage(copy_of, 0, 0);\n\t\t\t}\n\t\t}\n\t\tnew_canvas.ctx = new_ctx;\n\t\treturn new_canvas;\n\t}\n\n\tfunction mustHaveMethods(obj, methodNames) {\n\t\tfor (const methodName of methodNames) {\n\t\t\tif (typeof obj[methodName] != 'function') {\n\t\t\t\tconsole.error(\"Missing method\", methodName, \"on object\", obj);\n\t\t\t\tthrow new TypeError(\"missing method \" + methodName);\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\tconst windowInterfaceMethods = [\n\t\t\"close\",\n\t\t\"minimize\",\n\t\t\"unminimize\",\n\t\t// \"maximize\",\n\t\t// \"unmaximize\",\n\t\t\"bringToFront\", // TODO: maybe setZIndex instead\n\t\t\"getTitle\",\n\t\t// \"getIconName\",\n\t\t\"getIconAtSize\",\n\t\t\"focus\",\n\t\t\"blur\",\n\t\t\"onFocus\",\n\t\t\"onBlur\",\n\t\t\"onClosed\",\n\t];\n\n\n\tfunction file_name_from_path(file_path) {\n\t\treturn file_path.split(\"\\\\\").pop().split(\"/\").pop();\n\t}\n\n\tfunction file_extension_from_path(file_path) {\n\t\treturn (file_path.match(/\\.(\\w+)$/) || [, \"\"])[1];\n\t}\n\treturn {\n\t\tCursor,\n\t\tDESKTOP_ICON_SIZE,\n\t\tTASKBAR_ICON_SIZE,\n\t\tTITLEBAR_ICON_SIZE,\n\t\tgetIconPath,\n\t\tCanvas,\n\t\tmustHaveMethods,\n\t\twindowInterfaceMethods,\n\t\tfile_name_from_path,\n\n\t\tfile_extension_from_path\n\t}\n});"]}