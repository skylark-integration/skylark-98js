{"version":3,"sources":["FolderViewItem.js"],"names":["define","$","win98js","helpers","options","$icon","$container","$icon_wrapper","appendTo","$selection_effect","$title","text","title","single_click_timeout","append","on","event","ctrlKey","metaKey","shiftKey","altKey","open","clearTimeout","_was_selected_at_pointerdown","setTimeout","hasClass","this","start_rename","shortcut","addClass","dataset","filePath","file_path","element","icons","iconSize","DESKTOP_ICON_SIZE","is_system_folder","_update_icon","$old_icon","src","attr","draggable","width","height","style","setProperty","replaceWith","prepend","remove","getIconPath","setIcons","new_icons","setIconSize","new_size","rename","old_title","$input","val","e","key","focus","preventDefault","new_title","trim","removeClass","catch","error","alert","showMessageBox","message","iconID","then","empty","select"],"mappings":";;;;;;;AAAAA,QACC,iBACA,UACA,aACC,SAASC,EAAEC,EAAQC,GACjB,aAyJH,OAvJA,SAAwBC,GAIvB,IAIIC,EAJAC,EAAaL,EAAE,4DACfM,EAAgBN,EAAE,+BAA+BO,SAASF,GAC1DG,EAAoBR,EAAE,mCAAmCO,SAASD,GAClEG,EAAST,EAAE,wBAAwBU,KAAKP,EAAQQ,OAQpD,IAAIC,EANJP,EAAWQ,OAAOP,EAAeG,GAOjCJ,EAAWS,GAAG,WAAaC,IACtBA,EAAMC,SAAWD,EAAME,SAAWF,EAAMG,UAAYH,EAAMI,SAI9DhB,EAAQiB,OACRC,aAAaT,MAOdH,EAAOK,GAAG,QAAS,KACbT,EAAW,GAAGiB,+BAKnBV,EAAuBW,WAAW,KAC7BlB,EAAWmB,SAAS,aACvBC,KAAKC,gBAEJ,QAGAvB,EAAQwB,UACXtB,EAAWuB,SAAS,YAErBvB,EAAW,GAAGwB,QAAQC,SAAW3B,EAAQ4B,UAEzCN,KAAKO,QAAU3B,EAAW,GAE1BoB,KAAKQ,MAAQ9B,EAAQ8B,MACrBR,KAAKS,SAAW/B,EAAQ+B,UAAYhC,EAAQiC,kBAE5CV,KAAKM,UAAY5B,EAAQ4B,UACzBN,KAAKW,iBAAmBjC,EAAQiC,iBAEhCX,KAAKY,aAAe,MACnB,GAAIZ,KAAKQ,MAAO,CACf,MAAMK,EAAYlC,EACZmC,EAAMd,KAAKQ,MAAMR,KAAKS,WAC5B9B,EAAQJ,EAAE,wBACJwC,MACLC,WAAW,EACXF,IAAAA,EACAG,MAAOjB,KAAKS,SACZS,OAAQlB,KAAKS,WAEd1B,EAAkB,GAAGoC,MAAMC,YAAY,uBAAwBN,OAC3DD,EACHA,EAAUQ,YAAY1C,GAEtBE,EAAcyC,QAAQ3C,QAGvBA,GAASA,EAAM4C,SACf5C,EAAQ,KACRI,EAAkB,GAAGoC,MAAMC,YAAY,eAAgB,QAExDvC,EAAc,GAAGsC,MAAMC,YAAY,cAAepB,KAAKS,SAAW,MAClE5B,EAAc,GAAGsC,MAAMC,YAAY,0BAA2B3C,EAAQ+C,YAAY,WAAYxB,KAAKS,iBAEpGT,KAAKyB,SAAW,CAACC,IAChB1B,KAAKQ,MAAQkB,EACb1B,KAAKY,iBAENZ,KAAK2B,YAAc,CAACC,IACf5B,KAAKS,WAAamB,IAGtB5B,KAAKS,SAAWmB,EAChB5B,KAAKY,kBAENZ,KAAKY,eAELZ,KAAKC,aAAe,MACnB,IAAKvB,EAAQmD,OACZ,OAED,GAAIjD,EAAWmB,SAAS,YACvB,OAEDnB,EAAWuB,SAAS,YACpBvB,EAAWmC,KAAK,aAAa,GAC7B,MAAMe,EAAY9C,EAAOC,OAGnB8C,EAASxD,EAAE,wBACjBwD,EAAOC,IAAIF,GACXC,EAAO1C,GAAG,UAAY4C,IAGP,UAAVA,EAAEC,KACLtD,EAAWuD,QACXF,EAAEG,kBACkB,WAAVH,EAAEC,MACZH,EAAOC,IAAIF,GACXlD,EAAWuD,QACXF,EAAEG,oBAGJL,EAAO1C,GAAG,OAAQ,KACjB,MAAMgD,EAAYN,EAAOC,MACA,KAArBK,EAAUC,QAWdP,EAAOR,SACPvC,EAAOC,KAAKoD,GACZzD,EAAW2D,YAAY,YACvB3D,EAAWmC,KAAK,aAAa,GACzBsB,IAAcP,GAEjBpD,EAAQmD,OAAOQ,GACbG,MAAOC,IACPzD,EAAOC,KAAK6C,GACZY,MAAM,wBAA0BD,MAnBlCE,gBACCzD,MAAO,SACP0D,QAAS,4BACTC,OAAQ,UACNC,KAAK,KACPf,EAAOI,YAkBVnD,EAAO+D,QAAQ3D,OAAO2C,GACtBA,EAAO,GAAGI,QACVJ,EAAO,GAAGiB","file":"../FolderViewItem.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"./win98\",\n\t\"./helpers\"\n],function($,win98js,helpers){\n    \"use strict\";\n\n\tfunction FolderViewItem(options) {\n\t\t// TODO: rename options to be consistent,\n\t\t// like is_folder, is_shortcut, etc.\n\t\t// TODO: rename CSS class to folder-view-item, or find a better name\n\t\tvar $container = $(\"<div class='desktop-icon' draggable='true' tabindex=-1/>\");\n\t\tvar $icon_wrapper = $(\"<div class='icon-wrapper'/>\").appendTo($container);\n\t\tvar $selection_effect = $(\"<div class='selection-effect'/>\").appendTo($icon_wrapper);\n\t\tvar $title = $(\"<div class='title'/>\").text(options.title);\n\t\tvar $icon;\n\t\t$container.append($icon_wrapper, $title);\n\n\t\t// TODO: handle the loading state display in some intentional way\n\n\t\t// TODO: or if set to \"web\" mode, single click\n\t\t// also Enter is currently implemented by triggering dblclick which is awkward\n\t\tlet single_click_timeout;\n\t\t$container.on(\"dblclick\", (event) => {\n\t\t\tif (event.ctrlKey || event.metaKey || event.shiftKey || event.altKey) {\n\t\t\t\treturn; // Not true to Windows 98. But in Windows 98 it doesn't do two things, it just does the double click action.\n\t\t\t\t// At any rate, it feels nice to make Ctrl+click do only one thing (toggling the selection state).\n\t\t\t}\n\t\t\toptions.open();\n\t\t\tclearTimeout(single_click_timeout);\n\t\t});\n\t\t// TODO: allow dragging files out from this folder view to the system file browser, with dataTransfer.setData(\"DownloadURL\", ...)\n\t\t// sadly will only work for a single file (unless it secretly supports text/uri-list (either as a separate type or for DownloadURL))\n\t\t// also it won't work if I want to do custom drag-and-drop (e.g. repositioning icons)\n\t\t// so I have to choose one feature or the other (right?), probably custom drag-and-drop\n\n\t\t$title.on(\"click\", () => {\n\t\t\tif (!$container[0]._was_selected_at_pointerdown) {\n\t\t\t\treturn; // this click is for selecting the item\n\t\t\t}\n\t\t\t// @TODO: if the folder view wasn't focused at pointerdown,\n\t\t\t// don't start rename\n\t\t\tsingle_click_timeout = setTimeout(() => {\n\t\t\t\tif ($container.hasClass(\"selected\")) {\n\t\t\t\t\tthis.start_rename();\n\t\t\t\t}\n\t\t\t}, 500);\n\t\t});\n\n\t\tif (options.shortcut) {\n\t\t\t$container.addClass(\"shortcut\");\n\t\t}\n\t\t$container[0].dataset.filePath = options.file_path;\n\n\t\tthis.element = $container[0];\n\n\t\tthis.icons = options.icons;\n\t\tthis.iconSize = options.iconSize || helpers.DESKTOP_ICON_SIZE;\n\n\t\tthis.file_path = options.file_path;\n\t\tthis.is_system_folder = options.is_system_folder;\n\n\t\tthis._update_icon = () => {\n\t\t\tif (this.icons) {\n\t\t\t\tconst $old_icon = $icon;\n\t\t\t\tconst src = this.icons[this.iconSize];\n\t\t\t\t$icon = $(\"<img class='icon'/>\");\n\t\t\t\t$icon.attr({\n\t\t\t\t\tdraggable: false,\n\t\t\t\t\tsrc,\n\t\t\t\t\twidth: this.iconSize,\n\t\t\t\t\theight: this.iconSize,\n\t\t\t\t});\n\t\t\t\t$selection_effect[0].style.setProperty(\"--icon-image\", `url(\"${src}\")`);\n\t\t\t\tif ($old_icon) {\n\t\t\t\t\t$old_icon.replaceWith($icon);\n\t\t\t\t} else {\n\t\t\t\t\t$icon_wrapper.prepend($icon);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t$icon && $icon.remove();\n\t\t\t\t$icon = null;\n\t\t\t\t$selection_effect[0].style.setProperty(\"--icon-image\", \"none\");\n\t\t\t}\n\t\t\t$icon_wrapper[0].style.setProperty(\"--icon-size\", this.iconSize + \"px\");\n\t\t\t$icon_wrapper[0].style.setProperty(\"--shortcut-icon\", `url(\"${helpers.getIconPath(\"shortcut\", this.iconSize)}\")`);\n\t\t};\n\t\tthis.setIcons = (new_icons) => {\n\t\t\tthis.icons = new_icons;\n\t\t\tthis._update_icon();\n\t\t};\n\t\tthis.setIconSize = (new_size) => {\n\t\t\tif (this.iconSize === new_size) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.iconSize = new_size;\n\t\t\tthis._update_icon();\n\t\t};\n\t\tthis._update_icon();\n\n\t\tthis.start_rename = () => {\n\t\t\tif (!options.rename) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ($container.hasClass(\"renaming\")) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$container.addClass(\"renaming\");\n\t\t\t$container.attr(\"draggable\", false);\n\t\t\tconst old_title = $title.text();\n\t\t\t// @TODO: auto-size the input box,\n\t\t\t// and wrap to multiple lines\n\t\t\tconst $input = $(\"<input type='text'/>\");\n\t\t\t$input.val(old_title);\n\t\t\t$input.on(\"keydown\", (e) => {\n\t\t\t\t// relying on blur event to trigger the rename,\n\t\t\t\t// or to reset the input to the old title\n\t\t\t\tif (e.key === \"Enter\") {\n\t\t\t\t\t$container.focus();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t} else if (e.key === \"Escape\") {\n\t\t\t\t\t$input.val(old_title);\n\t\t\t\t\t$container.focus();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t}\n\t\t\t});\n\t\t\t$input.on(\"blur\", () => {\n\t\t\t\tconst new_title = $input.val();\n\t\t\t\tif (new_title.trim() === \"\") {\n\t\t\t\t\tshowMessageBox({\n\t\t\t\t\t\ttitle: \"Rename\",\n\t\t\t\t\t\tmessage: \"You must type a filename.\",\n\t\t\t\t\t\ticonID: \"error\",\n\t\t\t\t\t}).then(() => {\n\t\t\t\t\t\t$input.focus(); // @TODO: why is this needed? it's supposed to refocus the last focused element\n\t\t\t\t\t\t// well I guess it doesn't work for the desktop, just windows\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\t$input.remove(); // technically not necessary\n\t\t\t\t$title.text(new_title);\n\t\t\t\t$container.removeClass(\"renaming\");\n\t\t\t\t$container.attr(\"draggable\", true);\n\t\t\t\tif (new_title !== old_title) {\n\t\t\t\t\t// console.log(\"renaming\", this.file_path, \"to\", new_title);\n\t\t\t\t\toptions.rename(new_title)\n\t\t\t\t\t\t.catch((error) => {\n\t\t\t\t\t\t\t$title.text(old_title);\n\t\t\t\t\t\t\talert(\"Failed to rename:\\n\\n\" + error);\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t});\n\t\t\t$title.empty().append($input);\n\t\t\t$input[0].focus();\n\t\t\t$input[0].select();\n\t\t};\n\t}\n\n\treturn FolderViewItem;\n});"]}