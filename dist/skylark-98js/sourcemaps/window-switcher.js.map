{"version":3,"sources":["window-switcher.js"],"names":["define","$","clippy","win98js","Task","agent","iid","$window_switcher","$window_switcher_list","appendTo","$window_switcher_window_name","used_window_switcher","activate_window","$window","unminimize","bringToFront","focus","cycle_window_switcher","cycle_backwards","items","find","toArray","$active","new_index","indexOf","length","removeClass","new_item","addClass","text","data","getTitle","window_switcher_cancel","remove","window","addEventListener","e","altKey","key","preventDefault","target","closest","console","log","close","code","is","empty","tasks","all_tasks","stopCurrent","speak","sort","a","b","style","zIndex","task","$item","append","getIconAtSize","attr","src","width","height","alt","hasClass","show_window_switcher","shiftKey","alt_held","clearInterval","setInterval","look_for_focus_loss","window_switcher_close_and_select","notice_shown","top","document","hasFocus","activeElement","body","documentElement","load","loaded_agent","show","_el","one","animate"],"mappings":";;;;;;;AAAAA,QACC,iBACA,iBACA,UACA,UACC,SAASC,EAAEC,EAAOC,EAAQC,GAE3B,IAGIC,EA4FAC,EA/FAC,EAAmBN,EAAE,6CACrBO,EAAwBP,EAAE,qCAAqCQ,SAASF,GACxEG,EAA+BT,EAAE,wDAAwDQ,SAASF,GAElGI,GAAuB,EAE3B,SAASC,EAAgBC,GAExBA,EAAQC,aACRD,EAAQE,eACRF,EAAQG,QAsDT,SAASC,EAAsBC,GAC9B,MAAMC,EAAQZ,EAAiBa,KAAK,yBAAyBC,UACvDC,EAAUf,EAAiBa,KAAK,WAEhCG,GADYJ,EAAMK,QAAQF,EAAQ,KACPJ,GAAmB,EAAI,GAAMC,EAAMM,QAAUN,EAAMM,OACpFH,EAAQI,YAAY,UACpB,MAAMC,EAAWR,EAAMI,GACvBtB,EAAE0B,GAAUC,SAAS,UACrBlB,EAA6BmB,KAAK5B,EAAE0B,GAAUG,KAAK,WAAWC,YAa/D,SAASC,IACRzB,EAAiB0B,SAGlBC,OAAOC,iBAAiB,UASxB,SAAwBC,GACvB,GAAIA,EAAEC,SAAqB,MAAVD,EAAEE,KAAyB,OAAVF,EAAEE,KAAe,CAClDF,EAAEG,iBACF,MAAM1B,EAAUuB,EAAEI,OAAOC,QAAQ,eAAiBL,EAAEI,OAAOC,QAAQ,cAAc5B,QACjF6B,QAAQC,IAAI,iCAAkC9B,EAASuB,EAAEI,QACzD3B,GAAWA,EAAQ+B,SAGhBR,EAAEC,QAAsB,cAAXD,EAAES,MAAmC,QAAXT,EAAES,KAG5Cb,IAhGF,SAA8Bd,GAC7B,GAAIX,EAAiBuC,GAAG,YAEvB,YADA7B,EAAsBC,GAGvBV,EAAsBuC,QACtB,MAAMC,EAAQ5C,EAAK6C,UACnB,GAAqB,IAAjBD,EAAMvB,OAOT,OANAb,EAAgBoC,EAAM,GAAGnC,cACpBF,IACJN,GAASA,EAAM6C,cACf7C,GAASA,EAAM8C,MAAM,qEAKvB,KAAIH,EAAMvB,OAAS,GAAnB,CAGAuB,EAAMI,KAAK,CAACC,EAAGC,IAEdA,EAAEzC,QAAQ,GAAG0C,MAAMC,OAASH,EAAExC,QAAQ,GAAG0C,MAAMC,QAEhD,IAAK,MAAMC,KAAQT,EAAO,CACzB,IAAInC,EAAU4C,EAAK5C,QACf6C,EAAQzD,EAAE,QAAQ2B,SAAS,wBAC/B8B,EAAMC,OAAO9C,EAAQ+C,cAAc,KAAe3D,EAAE,SAAS4D,MAC5DC,IAAK,+BACLC,MAAO,GACPC,OAAQ,GACRC,IAAKpD,EAAQkB,cAEd2B,EAAM5B,KAAK,UAAWjB,GAItBL,EAAsBmD,OAAOD,GACzB7C,EAAQqD,SAAS,YACpBR,EAAM9B,SAAS,UAGjBX,EAAsBC,GACtBX,EAAiBE,SAAS,QAErBE,IACJN,GAASA,EAAM6C,cAEf7C,GAASA,EAAM8C,MAAM,0EACrBxC,GAAuB,IA8CvBwD,CAAqB/B,EAAEgC,UAIV,QAAVhC,EAAEE,MACL+B,GAAW,EAEXC,cAAchE,GACdA,EAAMiE,YAAYC,EAAqB,QA1BU,GACnDtC,OAAOC,iBAAiB,QA4BxB,SAAsBC,GAGhBA,EAAEC,SACNgC,GAAW,EACXC,cAAchE,GAjDhB,WACC,IAAKC,EAAiBuC,GAAG,YACxB,OAED,MAAMxB,EAAUf,EAAiBa,KAAK,WACf,IAAnBE,EAAQG,SAGZb,EAAgBU,EAAQQ,KAAK,YAC7BvB,EAAiB0B,UA0ChBwC,MAnC6C,GAC/CvC,OAAOC,iBAAiB,OAAQH,GAKhC,IAAIqC,GAAW,EACXK,GAAe,EA+BnB,SAASF,IASR,GAAIH,IAAaM,IAAIC,SAASC,WAAY,CAIzC,KACEF,IAAIC,SAASE,eACdH,IAAIC,SAASE,gBAAkBH,IAAIC,SAASG,MAC5CJ,IAAIC,SAASE,gBAAkBH,IAAIC,SAASI,mBAG5CL,IAAI3D,QACA2D,IAAIC,SAASC,YAEhB,OAiBF,GAHAP,cAAchE,GACd+D,GAAW,EAEPjE,EAAK6C,UAAUxB,OAAS,EAC3B,OAEIiD,IACJ,IAAIxE,EAAO+E,KAAK,SAAU,SAAUC,IACnC7E,EAAQ6E,GACFC,OAEN9E,EAAM8C,MADU,kLACK,GAErBlD,EAAEI,EAAM+E,KAAKC,IAAI,WAAY,WAC5BhF,EAAM6C,cACN7C,EAAMiF,cAGRZ,GAAe","file":"../window-switcher.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"skylark-clippy\",\n\t\"./win98\",\n\t\"./Task\"\n],function($,clippy,win98js,Task){\n\t\n\tvar $window_switcher = $(\"<div class='window-switcher outset-deep'>\");\n\tvar $window_switcher_list = $(\"<ul class='window-switcher-list'>\").appendTo($window_switcher);\n\tvar $window_switcher_window_name = $(\"<div class='window-switcher-window-name inset-deep'>\").appendTo($window_switcher);\n\tvar agent;\n\tvar used_window_switcher = false;\n\n\tfunction activate_window($window) {\n\t\t// console.log(\"Activating window:\", $window);\n\t\t$window.unminimize();\n\t\t$window.bringToFront();\n\t\t$window.focus(); // unminimize will focus but only if it was minimized (that's the current behavior anyway)\n\t}\n\n\tfunction show_window_switcher(cycle_backwards) {\n\t\tif ($window_switcher.is(\":visible\")) {\n\t\t\tcycle_window_switcher(cycle_backwards);\n\t\t\treturn;\n\t\t}\n\t\t$window_switcher_list.empty();\n\t\tconst tasks = Task.all_tasks;\n\t\tif (tasks.length === 1) {\n\t\t\tactivate_window(tasks[0].$window);\n\t\t\tif (!used_window_switcher) {\n\t\t\t\tagent && agent.stopCurrent(); // needed to continue on from the message with `hold` set (speak(message, true))\n\t\t\t\tagent && agent.speak(\"If there's only one window, Alt+` will switch to it right away.\");\n\t\t\t\t// used_window_switcher = true; // allow the switching message to be spoken later\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\tif (tasks.length < 2) {\n\t\t\treturn;\n\t\t}\n\t\ttasks.sort((a, b) =>\n\t\t\t// using z-index, as it's similar to last-used order\n\t\t\tb.$window[0].style.zIndex - a.$window[0].style.zIndex\n\t\t);\n\t\tfor (const task of tasks) {\n\t\t\tvar $window = task.$window;\n\t\t\tvar $item = $(\"<li>\").addClass(\"window-switcher-item\");\n\t\t\t$item.append($window.getIconAtSize(32) /*??*/ ||  $(\"<img>\").attr({\n\t\t\t\tsrc: \"/images/icons/task-32x32.png\",\n\t\t\t\twidth: 32,\n\t\t\t\theight: 32,\n\t\t\t\talt: $window.getTitle()\n\t\t\t}));\n\t\t\t$item.data(\"$window\", $window);\n\t\t\t// $item.on(\"click\", function () { // Windows 98 didn't allow clicking items in the window switcher.\n\t\t\t// \tactivate_window($window);\n\t\t\t// });\n\t\t\t$window_switcher_list.append($item);\n\t\t\tif ($window.hasClass(\"focused\")) {\n\t\t\t\t$item.addClass(\"active\");\n\t\t\t}\n\t\t}\n\t\tcycle_window_switcher(cycle_backwards);\n\t\t$window_switcher.appendTo(\"body\");\n\t\t// console.log(\"Showing window switcher\", $window_switcher[0]);\n\t\tif (!used_window_switcher) {\n\t\t\tagent && agent.stopCurrent(); // needed to continue on from the message with `hold` set (speak(message, true))\n\t\t\t// Um, if you know about Alt+Tab, you can guess about how Alt+` works. But Clippy is supposed to be annoying, right?\n\t\t\tagent && agent.speak(\"There you go! Press grave accent until you get to the window you want.\");\n\t\t\tused_window_switcher = true;\n\t\t}\n\t}\n\tfunction cycle_window_switcher(cycle_backwards) {\n\t\tconst items = $window_switcher.find(\".window-switcher-item\").toArray();\n\t\tconst $active = $window_switcher.find(\".active\");\n\t\tconst old_index = items.indexOf($active[0]);\n\t\tconst new_index = ((old_index + (cycle_backwards ? -1 : 1)) + items.length) % items.length;\n\t\t$active.removeClass(\"active\");\n\t\tconst new_item = items[new_index];\n\t\t$(new_item).addClass(\"active\");\n\t\t$window_switcher_window_name.text($(new_item).data(\"$window\").getTitle());\n\t}\n\tfunction window_switcher_close_and_select() {\n\t\tif (!$window_switcher.is(\":visible\")) {\n\t\t\treturn;\n\t\t}\n\t\tconst $active = $window_switcher.find(\".active\");\n\t\tif ($active.length === 0) {\n\t\t\treturn;\n\t\t}\n\t\tactivate_window($active.data(\"$window\"));\n\t\t$window_switcher.remove(); // must remove only after getting data()\n\t}\n\tfunction window_switcher_cancel() {\n\t\t$window_switcher.remove();\n\t}\n\n\twindow.addEventListener(\"keydown\", handle_keydown, true);\n\twindow.addEventListener(\"keyup\", handle_keyup, true);\n\twindow.addEventListener(\"blur\", window_switcher_cancel); // this may be from an iframe getting focus (e.g. an app was loading), but in that case we might not be able to get the keyup anyways\n\t// @TODO: detect if it's an iframe we've integrated with and thus could get the keyup event\n\t// @TODO: also detect blur inside iframes, to cancel window switching\n\n\tvar iid;\n\tvar alt_held = false; // for detecting likely Alt+Tab\n\tvar notice_shown = false;\n\tfunction handle_keydown(e) {\n\t\tif (e.altKey && (e.key === \"4\" || e.key === \"F4\")) { // we can't actually intercept Alt+F4, but might as well try, right?\n\t\t\te.preventDefault();\n\t\t\tconst $window = e.target.closest(\".os-window\") && e.target.closest(\".os-window\").$window;\n\t\t\tconsole.log(\"Alt+4 detected, closing window\", $window, e.target);\n\t\t\t$window && $window.close();\n\t\t}\n\t\t// console.log(e.key, e.code);\n\t\tif (e.altKey && (e.code === \"Backquote\" || e.code === \"Tab\")) {\n\t\t\tshow_window_switcher(e.shiftKey);\n\t\t} else {\n\t\t\twindow_switcher_cancel();\n\t\t}\n\t\tif (e.key === \"Alt\") {\n\t\t\talt_held = true;\n\t\t\t// console.log(\"Alt held\");\n\t\t\tclearInterval(iid);\n\t\t\tiid = setInterval(look_for_focus_loss, 200);\n\t\t}\n\t}\n\tfunction handle_keyup(e) {\n\t\t// console.log(\"keyup\", e.key, e.code);\n\t\t// if (e.key === \"Alt\") { // on my Ubuntu XFCE, it's giving \"Meta\" if Shift is held\n\t\tif (!e.altKey) {\n\t\t\talt_held = false;\n\t\t\tclearInterval(iid);\n\t\t\t// console.log(\"Alt released\");\n\t\t\twindow_switcher_close_and_select();\n\t\t}\n\t}\n\tfunction look_for_focus_loss() {\n\t\t// Welcome to Heuristic Hurdles! I'm your host, Hacky Hairy. Today we're going to be detecting Alt+Tab.\n\t\t// Alt+Tab is a common shortcut for switching between windows, but we can't actually intercept it.\n\t\t// In fact, the browser doesn't even know about it. It's handled by the window manager directly.\n\t\t// We'll have to pick another shortcut, but who's going to know about it? Wouldn't it be nice if we could at least detect Alt+Tab,\n\t\t// to inform users of the new shortcut? How are we going to do that, in mere JavaScript?\n\t\t// Heuristics! *queue Heuristic Hurdles theme song*\n\n\t\t// console.log(\"alt_held\", alt_held, \"!top.document.hasFocus()\", !top.document.hasFocus(), \"top.document.hasFocus()\", top.document.hasFocus(), \"top.document\", top.document, \"top.activeElement\", top.document.activeElement);\n\t\tif (alt_held && !top.document.hasFocus()) {\n\t\t\t// Some things like closing a window with Alt+4 can cause the document to lose focus, without Alt+Tab.\n\t\t\t// But if the window's really lost focus, we shouldn't be able to focus an element in it to focus the document.\n\t\t\t// So we can use that to refine the heuristic.\n\t\t\tif (\n\t\t\t\t!top.document.activeElement ||\n\t\t\t\ttop.document.activeElement === top.document.body ||\n\t\t\t\ttop.document.activeElement === top.document.documentElement\n\t\t\t) {\n\t\t\t\t// try focusing the document (or window, rather)\n\t\t\t\ttop.focus();\n\t\t\t\tif (top.document.hasFocus()) {\n\t\t\t\t\t// console.log(\"Focused document\");\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\t// console.log(\"Couldn't focus document, so you've probably Alt+Tabbed\");\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// console.log(\"Active element is\", top.document.activeElement, \" despite hasFocus() being false so you've probably Alt+Tabbed\");\n\t\t\t}\n\n\t\t\t// False positives:\n\t\t\t// - Alt+D focuses the address bar in Chrome\n\t\t\t// - Hold Alt and click outside the browser window\n\t\t\t// - Alt+Space shows the system window menu on some platforms, and on Ubuntu XFCE in Firefox this causes a false positive but not in Chrome apparently (weird!)\n\t\t\t// - Alt+(number) focuses a tab in Chrome, but it actually lets us cancel it; @TODO: detect this as not an Alt+Tab (could use a timeout after any key pressed while holding Alt)\n\n\t\t\tclearInterval(iid);\n\t\t\talt_held = false;\n\n\t\t\tif (Task.all_tasks.length < 2) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!notice_shown) {\n\t\t\t\tnew clippy.load(\"Clippy\", function (loaded_agent) {\n\t\t\t\t\tagent = loaded_agent;\n\t\t\t\t\tagent.show();\n\t\t\t\t\tconst message = \"It looks like you're trying to switch windows.\\n\\nUse Alt+` (grave accent) instead of Alt+Tab within the 98.js desktop.\\n\\nAlso, use Alt+4 instead of Alt+F4 to close windows.\";\n\t\t\t\t\tagent.speak(message, true);\n\t\t\t\t\t// held message causes double click to not animate Clippy, for some reason (even after message is cleared)\n\t\t\t\t\t$(agent._el).one(\"dblclick\", function () {\n\t\t\t\t\t\tagent.stopCurrent();\n\t\t\t\t\t\tagent.animate();\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\tnotice_shown = true;\n\t\t\t}\n\t\t}\n\t}\n\n});\n"]}