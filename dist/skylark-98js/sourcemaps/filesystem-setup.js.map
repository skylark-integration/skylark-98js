{"version":3,"sources":["filesystem-setup.js"],"names":["define","$","win98js","__fs_initialized","__fs_errored","__fs_timed_out","__fs_waiting_callbacks","web_server_root_for_browserfs","location","href","match","BrowserFS","configure","fs","options","writable","storeName","readable","index","baseUrl","error","length","alert","i","setTimeout","withFilesystem","callback","push"],"mappings":";;;;;;;AAAAA,QACC,iBACA,WACC,SAASC,EAAEC,GAEZ,IAAIC,EACAC,EACAC,EACAC,KAKJ,MAAMC,EACLC,SAASC,KAAKC,MAAM,aACnBF,SAASC,KAAKC,MAAM,eAAe,GAAK,IACxC,IAqEF,OAnEAC,UAAUC,WACTC,GAAI,YACJC,SACCC,UACCF,GAAI,YACJC,SACCE,UAAW,OAGbC,UACCJ,GAAI,iBACJC,SACCI,MAAOX,EAAgC,wBACvCY,QAASZ,MAQV,SAAUa,GACZ,GAAIA,EAQH,MAPAhB,GAAe,EACXE,EAAuBe,QAE1BC,MAAM,6DAEPhB,KAEMc,EAEPjB,GAAmB,EACnB,IAAK,IAAIoB,EAAI,EAAGA,EAAIjB,EAAuBe,OAAQE,IAClDjB,EAAuBiB,KAExBjB,OAGDkB,WAAW,WACVnB,GAAiB,EACbC,EAAuBe,QAE1BC,MAAM,kCAEPhB,MACE,MAsBFmB,eApBD,SAAwBC,GACnBvB,EACHuB,IACUtB,EACVkB,MAAM,6DACIjB,EACViB,MAAM,kCAMNhB,EAAuBqB,KAAKD","file":"../filesystem-setup.js","sourcesContent":["define([\n\t\"skylark-jquery\",\n\t\"./win98\"\n],function($,win98js){\n\n\tvar __fs_initialized;\n\tvar __fs_errored;\n\tvar __fs_timed_out;\n\tvar __fs_waiting_callbacks = [];\n\n\n\t// For Wayback Machine, match URLs like https://web.archive.org/web/20191213113214/https://98.js.org/\n\t// (also match URLs like https://98.js.org/ because why not)\n\tconst web_server_root_for_browserfs =\n\t\tlocation.href.match(/98.js.org/) ?\n\t\t\tlocation.href.match(/.*98.js.org/)[0] + \"/\" :\n\t\t\t\"/\";\n\n\tBrowserFS.configure({\n\t\tfs: \"OverlayFS\",\n\t\toptions: {\n\t\t\twritable: {\n\t\t\t\tfs: \"IndexedDB\",\n\t\t\t\toptions: {\n\t\t\t\t\tstoreName: \"C:\"\n\t\t\t\t}\n\t\t\t},\n\t\t\treadable: {\n\t\t\t\tfs: \"XmlHttpRequest\",\n\t\t\t\toptions: {\n\t\t\t\t\tindex: web_server_root_for_browserfs + \"filesystem-index.json\",\n\t\t\t\t\tbaseUrl: web_server_root_for_browserfs\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// TODO: mount the repo contents at something like C:\\98\\\n\t\t// but other OS stuff from a subfolder of the repo as root (C? HD? hard-drive? disk? OS?)\n\t\t// the desktop at something like.. well I guess C:\\98\\desktop\n\t\t// and I could have the default desktop setup in source control there\n\t}, function (error) {\n\t\tif (error) {\n\t\t\t__fs_errored = true;\n\t\t\tif (__fs_waiting_callbacks.length) {\n\t\t\t\t// TODO: DRY (can probably simplify this logic significantly)\n\t\t\t\talert(\"The filesystem is not available. It failed to initialize.\");\n\t\t\t}\n\t\t\t__fs_waiting_callbacks = [];\n\t\t\t// TODO: message box; offer to reset the filesystem\n\t\t\tthrow error;\n\t\t}\n\t\t__fs_initialized = true;\n\t\tfor (var i = 0; i < __fs_waiting_callbacks.length; i++) {\n\t\t\t__fs_waiting_callbacks[i]();\n\t\t}\n\t\t__fs_waiting_callbacks = [];\n\t});\n\n\tsetTimeout(function () {\n\t\t__fs_timed_out = true;\n\t\tif (__fs_waiting_callbacks.length) {\n\t\t\t// TODO: DRY (can probably simplify this logic significantly)\n\t\t\talert(\"The filesystem is not working.\");\n\t\t}\n\t\t__fs_waiting_callbacks = [];\n\t}, 5000);\n\n\tfunction withFilesystem(callback) {\n\t\tif (__fs_initialized) {\n\t\t\tcallback();\n\t\t} else if (__fs_errored) {\n\t\t\talert(\"The filesystem is not available. It failed to initialize.\");\n\t\t} else if (__fs_timed_out) {\n\t\t\talert(\"The filesystem is not working.\");\n\t\t} else {\n\t\t\t// wait within a global period of time while it should be configuring (and not show a message box)\n\t\t\t// TODO: hm, maybe a global timeout isn't what we want\n\t\t\t// The desktop should load, regardless of how long it takes.\n\t\t\t// Other operations could fail in a second or more. Depending on the operation.\n\t\t\t__fs_waiting_callbacks.push(callback);\n\t\t}\n\t}\n\t// TODO: never use alert(); use thematic, non-blocking dialog windows, preferably with warning and error icons\n\t// I have a show_error_message in jspaint, but with no warning or error icons - as of writing; see https://github.com/1j01/jspaint/issues/84\n\n\n\treturn {\n\t\twithFilesystem\n\t}\n\n});"]}